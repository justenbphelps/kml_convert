{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/justen/Projects/Apps/kml_convert/components/Uploader.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nvar toGeoJSON = require('../static/togeojson');\n\nimport { FormRadio } from 'shards-react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nfunction upload(e) {\n  var file = e.target.files[0];\n  var url = window.URL.createObjectURL(file);\n  var xhr = new XMLHttpRequest(url);\n  xhr.open(\"GET\", url, true);\n  xhr.send();\n\n  xhr.onload = function () {\n    var kml = xhr.responseXML;\n    convert(kml, file);\n  };\n}\n\nfunction convert(kml, file) {\n  var geojson = toGeoJSON.kml(kml); // const download = window.URL.createObjectURL(geojson)\n\n  console.log();\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(_JSON$stringify(geojson));\n  var dlAnchorElem = document.getElementById('downloadAnchorElem');\n  dlAnchorElem.setAttribute(\"href\", dataStr);\n  dlAnchorElem.setAttribute(\"download\", file.name.slice(0, -4) + \".json\");\n  dlAnchorElem.click();\n}\n\nfunction select(e) {\n  console.log('gv');\n}\n\nexport default function Uploader() {\n  return React.createElement(\"div\", {\n    className: \"jsx-3366377244\" + \" \" + \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-3366377244\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \".kml converter\"), React.createElement(FormRadio, {\n    inline: true,\n    name: \"filetype\",\n    checked: true,\n    onChange: function onChange() {\n      console.log('json');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \".json\"), React.createElement(FormRadio, {\n    inline: true,\n    name: \"filetype\",\n    checked: this.state.selectedSport === \"football\",\n    onChange: function onChange() {\n      console.log('geojson');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \".geojson\"), React.createElement(\"span\", {\n    className: \"jsx-3366377244\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Select your .kml file below to convert and automatically download the converted .json file\"), React.createElement(\"div\", {\n    className: \"jsx-3366377244\" + \" \" + \"upload_form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    id: \"downloadAnchorElem\",\n    className: \"jsx-3366377244\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file_input\",\n    name: \"file_input\",\n    onChange: upload,\n    accept: \".kml\",\n    className: \"jsx-3366377244\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"file_input\",\n    className: \"jsx-3366377244\" + \" \" + \"upload_label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Select File\")), React.createElement(_JSXStyle, {\n    id: \"3366377244\",\n    __self: this\n  }, \".wrapper.jsx-3366377244{width:350px;height:200px;padding:10px;text-align:center;background-color:#fff;border-radius:4px;box-shadow:2px 6px 10px rgba(0,0,0,0.1);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transition:all 0.4s;transition:all 0.4s;}.wrapper.jsx-3366377244:hover{box-shadow:4px 8px 12px rgba(0,0,0,0.2);-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px);}h1.jsx-3366377244{font-weight:400;font-size:18px;margin-top:10px;}span.jsx-3366377244{font-size:12px;}input[type=\\\"file\\\"].jsx-3366377244{width:0.1px;height:0.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1;}.upload_label.jsx-3366377244{font-weight:700;width:150px;height:35px;margin-bottom:10px;border-radius:4px;text-align:center;line-height:150%;font-size:1.15em;color:white;background-color:#4264fb;display:grid;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;}a.jsx-3366377244{display:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdXN0ZW4vUHJvamVjdHMvQXBwcy9rbWxfY29udmVydC9jb21wb25lbnRzL1VwbG9hZGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Fa0IsQUFHdUIsQUFjNEIsQUFJeEIsQUFLRCxBQUdILEFBUUksQUFlSCxZQWhEQSxBQTBCQSxDQXVCZixFQTFCQSxDQUxpQixBQWdCSCxTQWpDQyxBQTBCSCxHQVFFLEdBaEJJLElBU0EsR0ExQkUsRUFZVSxBQXNCVCxPQWhCckIsSUFTb0IsS0ExQkksR0FrQ0osVUFQUCxRQVFPLENBbENBLEVBMkJwQixlQVFtQixDQWxDdUIsZ0JBbUN2QixpQkFDTCxPQW5DQyxBQVNmLEtBMkIyQix5QkFDWixhQUNNLCtCQXJDRyw4REFzQ1AsZUFDakIsQ0F0Q2dDLG1IQUNYLDZGQUNDLGdEQUN0QiIsImZpbGUiOiIvVXNlcnMvanVzdGVuL1Byb2plY3RzL0FwcHMva21sX2NvbnZlcnQvY29tcG9uZW50cy9VcGxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRvR2VvSlNPTiA9IHJlcXVpcmUoJy4uL3N0YXRpYy90b2dlb2pzb24nKVxuXG5pbXBvcnQgeyBGb3JtUmFkaW8gfSBmcm9tICdzaGFyZHMtcmVhY3QnO1xuXG5pbXBvcnQgXCJib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3NcIjtcbmltcG9ydCBcInNoYXJkcy11aS9kaXN0L2Nzcy9zaGFyZHMubWluLmNzc1wiO1xuXG5cbmZ1bmN0aW9uIHVwbG9hZChlKSB7XG4gIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXVxuICBsZXQgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSlcbiAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KHVybClcbiAgeGhyLm9wZW4oXCJHRVRcIiwgdXJsLCB0cnVlKVxuICB4aHIuc2VuZCgpXG4gIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBrbWwgPSB4aHIucmVzcG9uc2VYTUxcbiAgICBjb252ZXJ0KGttbCwgZmlsZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBjb252ZXJ0KGttbCwgZmlsZSl7XG4gIGNvbnN0IGdlb2pzb24gPSB0b0dlb0pTT04ua21sKGttbClcbiAgLy8gY29uc3QgZG93bmxvYWQgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChnZW9qc29uKVxuICBjb25zb2xlLmxvZygpXG5cbiAgdmFyIGRhdGFTdHIgPSBcImRhdGE6dGV4dC9qc29uO2NoYXJzZXQ9dXRmLTgsXCIgKyBlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoZ2VvanNvbikpO1xuICB2YXIgZGxBbmNob3JFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rvd25sb2FkQW5jaG9yRWxlbScpO1xuICBkbEFuY2hvckVsZW0uc2V0QXR0cmlidXRlKFwiaHJlZlwiLCAgICAgZGF0YVN0ciAgICAgKTtcbiAgZGxBbmNob3JFbGVtLnNldEF0dHJpYnV0ZShcImRvd25sb2FkXCIsIGZpbGUubmFtZS5zbGljZSgwLCAtNCkgKyBcIi5qc29uXCIpO1xuICBkbEFuY2hvckVsZW0uY2xpY2soKTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0KGUpe1xuICBjb25zb2xlLmxvZygnZ3YnKVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFVwbG9hZGVyKCkge1xuXG4gIHJldHVybihcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBwZXJcIj5cbiAgICAgIDxoMT4ua21sIGNvbnZlcnRlcjwvaDE+XG4gICAgICA8Rm9ybVJhZGlvXG4gICAgICAgICAgICBpbmxpbmVcbiAgICAgICAgICAgIG5hbWU9XCJmaWxldHlwZVwiXG4gICAgICAgICAgICBjaGVja2VkXG4gICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnanNvbicpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgLmpzb25cbiAgICAgICAgICA8L0Zvcm1SYWRpbz5cbiAgICAgICAgICA8Rm9ybVJhZGlvXG4gICAgICAgICAgICBpbmxpbmVcbiAgICAgICAgICAgIG5hbWU9XCJmaWxldHlwZVwiXG4gICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5zZWxlY3RlZFNwb3J0ID09PSBcImZvb3RiYWxsXCJ9XG4gICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZ2VvanNvbicpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgLmdlb2pzb25cbiAgICAgICAgICA8L0Zvcm1SYWRpbz5cbiAgICAgIDxzcGFuPlNlbGVjdCB5b3VyIC5rbWwgZmlsZSBiZWxvdyB0byBjb252ZXJ0IGFuZCBhdXRvbWF0aWNhbGx5IGRvd25sb2FkIHRoZSBjb252ZXJ0ZWQgLmpzb24gZmlsZTwvc3Bhbj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXBsb2FkX2Zvcm1cIj5cbiAgICAgICAgPGEgaWQ9XCJkb3dubG9hZEFuY2hvckVsZW1cIiA+PC9hPlxuICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiBpZD1cImZpbGVfaW5wdXRcIiBuYW1lPVwiZmlsZV9pbnB1dFwiIG9uQ2hhbmdlPXt1cGxvYWR9IGFjY2VwdD1cIi5rbWxcIj48L2lucHV0PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImZpbGVfaW5wdXRcIiBjbGFzc05hbWU9XCJ1cGxvYWRfbGFiZWxcIj5TZWxlY3QgRmlsZTwvbGFiZWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLndyYXBwZXIge1xuICAgICAgICAgIHdpZHRoOiAzNTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDJweCA2cHggMTBweCByZ2JhKDAsMCwwLDAuMSk7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjRzO1xuICAgICAgICB9XG4gICAgICAgIC53cmFwcGVyOmhvdmVye1xuICAgICAgICAgIGJveC1zaGFkb3c6IDRweCA4cHggMTJweCByZ2JhKDAsMCwwLDAuMik7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KTtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgICAgfVxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgICAgICAgIHdpZHRoOiAwLjFweDtcbiAgICAgICAgICBoZWlnaHQ6IDAuMXB4O1xuICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgIH1cbiAgICAgICAgLnVwbG9hZF9sYWJlbCB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTUwJTtcbiAgICAgICAgICBmb250LXNpemU6IDEuMTVlbTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQyNjRmYjtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIGEge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKVxufSJdfQ== */\\n/*@ sourceURL=/Users/justen/Projects/Apps/kml_convert/components/Uploader.js */\"));\n}","map":{"version":3,"sources":["/Users/justen/Projects/Apps/kml_convert/components/Uploader.js"],"names":["toGeoJSON","require","FormRadio","upload","e","file","target","files","url","window","URL","createObjectURL","xhr","XMLHttpRequest","open","send","onload","kml","responseXML","convert","geojson","console","log","dataStr","encodeURIComponent","dlAnchorElem","document","getElementById","setAttribute","name","slice","click","select","Uploader","state","selectedSport"],"mappings":"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","sourcesContent":["const toGeoJSON = require('../static/togeojson')\n\nimport { FormRadio } from 'shards-react';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\n\nfunction upload(e) {\n  const file = e.target.files[0]\n  let url = window.URL.createObjectURL(file)\n  const xhr = new XMLHttpRequest(url)\n  xhr.open(\"GET\", url, true)\n  xhr.send()\n  xhr.onload = function() {\n    const kml = xhr.responseXML\n    convert(kml, file)\n  }\n}\n\nfunction convert(kml, file){\n  const geojson = toGeoJSON.kml(kml)\n  // const download = window.URL.createObjectURL(geojson)\n  console.log()\n\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(geojson));\n  var dlAnchorElem = document.getElementById('downloadAnchorElem');\n  dlAnchorElem.setAttribute(\"href\",     dataStr     );\n  dlAnchorElem.setAttribute(\"download\", file.name.slice(0, -4) + \".json\");\n  dlAnchorElem.click();\n}\n\nfunction select(e){\n  console.log('gv')\n}\n\n\nexport default function Uploader() {\n\n  return(\n    <div className=\"wrapper\">\n      <h1>.kml converter</h1>\n      <FormRadio\n            inline\n            name=\"filetype\"\n            checked\n            onChange={() => {\n              console.log('json');\n            }}\n          >\n          .json\n          </FormRadio>\n          <FormRadio\n            inline\n            name=\"filetype\"\n          checked={this.state.selectedSport === \"football\"}\n            onChange={() => {\n              console.log('geojson');\n            }}\n          >\n          .geojson\n          </FormRadio>\n      <span>Select your .kml file below to convert and automatically download the converted .json file</span>\n      <div className=\"upload_form\">\n        <a id=\"downloadAnchorElem\" ></a>\n        <input type=\"file\" id=\"file_input\" name=\"file_input\" onChange={upload} accept=\".kml\"></input>\n        <label htmlFor=\"file_input\" className=\"upload_label\">Select File</label>\n      </div>\n      <style jsx>{`\n        .wrapper {\n          width: 350px;\n          height: 200px;\n          padding: 10px;\n          text-align: center;\n          background-color: #fff;\n          border-radius: 4px;\n          box-shadow: 2px 6px 10px rgba(0,0,0,0.1);\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          align-items: center;\n          transition: all 0.4s;\n        }\n        .wrapper:hover{\n          box-shadow: 4px 8px 12px rgba(0,0,0,0.2);\n          transform: translateY(-10px);\n        }\n        h1 {\n          font-weight: 400;\n          font-size: 18px;\n          margin-top: 10px;\n        }\n        span {\n          font-size: 12px;\n        }\n        input[type=\"file\"] {\n          width: 0.1px;\n          height: 0.1px;\n          opacity: 0;\n          overflow: hidden;\n          position: absolute;\n          z-index: -1;\n        }\n        .upload_label {\n          font-weight: 700;\n          width: 150px;\n          height: 35px;\n          margin-bottom: 10px;\n          border-radius: 4px;\n          text-align: center;\n          line-height: 150%;\n          font-size: 1.15em;\n          color: white;\n          background-color: #4264fb;\n          display: grid;\n          align-items: center;\n          cursor: pointer;\n        }\n        a {\n          display: none;\n        }\n      `}</style>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}