{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.toGeoJSON = void 0;\n\nvar _parseInt2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/parse-int\"));\n\nvar _parseFloat2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/parse-float\"));\n\nvar toGeoJSON = function () {\n  'use strict';\n\n  var removeSpace = /\\s*/g,\n      trimSpace = /^\\s*|\\s*$/g,\n      splitSpace = /\\s+/; // generate a short, numeric hash of a string\n\n  function okhash(x) {\n    if (!x || !x.length) return 0;\n\n    for (var i = 0, h = 0; i < x.length; i++) {\n      h = (h << 5) - h + x.charCodeAt(i) | 0;\n    }\n\n    return h;\n  } // all Y children of X\n\n\n  function get(x, y) {\n    return x.getElementsByTagName(y);\n  }\n\n  function attr(x, y) {\n    return x.getAttribute(y);\n  }\n\n  function attrf(x, y) {\n    return (0, _parseFloat2[\"default\"])(attr(x, y));\n  } // one Y child of X, if any, otherwise null\n\n\n  function get1(x, y) {\n    var n = get(x, y);\n    return n.length ? n[0] : null;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n\n\n  function norm(el) {\n    if (el.normalize) {\n      el.normalize();\n    }\n\n    return el;\n  } // cast array x into numbers\n\n\n  function numarray(x) {\n    for (var j = 0, o = []; j < x.length; j++) {\n      o[j] = (0, _parseFloat2[\"default\"])(x[j]);\n    }\n\n    return o;\n  } // get the content of a text node, if any\n\n\n  function nodeVal(x) {\n    if (x) {\n      norm(x);\n    }\n\n    return x && x.textContent || '';\n  } // get the contents of multiple text nodes, if present\n\n\n  function getMulti(x, ys) {\n    var o = {},\n        n,\n        k;\n\n    for (k = 0; k < ys.length; k++) {\n      n = get1(x, ys[k]);\n      if (n) o[ys[k]] = nodeVal(n);\n    }\n\n    return o;\n  } // add properties of Y to X, overwriting if present in both\n\n\n  function extend(x, y) {\n    for (var k in y) {\n      x[k] = y[k];\n    }\n  } // get one coordinate from a coordinate array, if any\n\n\n  function coord1(v) {\n    return numarray(v.replace(removeSpace, '').split(','));\n  } // get all coordinates from a coordinate array as [[],[]]\n\n\n  function coord(v) {\n    var coords = v.replace(trimSpace, '').split(splitSpace),\n        o = [];\n\n    for (var i = 0; i < coords.length; i++) {\n      o.push(coord1(coords[i]));\n    }\n\n    return o;\n  }\n\n  function coordPair(x) {\n    var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n        ele = get1(x, 'ele'),\n        // handle namespaced attribute in browser\n    heartRate = get1(x, 'gpxtpx:hr') || get1(x, 'hr'),\n        time = get1(x, 'time'),\n        e;\n\n    if (ele) {\n      e = (0, _parseFloat2[\"default\"])(nodeVal(ele));\n\n      if (!isNaN(e)) {\n        ll.push(e);\n      }\n    }\n\n    return {\n      coordinates: ll,\n      time: time ? nodeVal(time) : null,\n      heartRate: heartRate ? (0, _parseFloat2[\"default\"])(nodeVal(heartRate)) : null\n    };\n  } // create a new feature collection parent object\n\n\n  function fc() {\n    return {\n      type: 'FeatureCollection',\n      features: []\n    };\n  }\n\n  var serializer;\n\n  if (typeof XMLSerializer !== 'undefined') {\n    /* istanbul ignore next */\n    serializer = new XMLSerializer();\n  } else {\n    var isNodeEnv = typeof process === 'object' && !process.browser;\n    var isTitaniumEnv = typeof Titanium === 'object';\n\n    if (typeof exports === 'object' && (isNodeEnv || isTitaniumEnv)) {\n      serializer = new (require('xmldom').XMLSerializer)();\n    } else {\n      throw new Error('Unable to initialize serializer');\n    }\n  }\n\n  function xml2str(str) {\n    // IE9 will create a new XMLSerializer but it'll crash immediately.\n    // This line is ignored because we don't run coverage tests in IE9\n\n    /* istanbul ignore next */\n    if (str.xml !== undefined) return str.xml;\n    return serializer.serializeToString(str);\n  }\n\n  var t = {\n    kml: function kml(doc) {\n      var gj = fc(),\n          // styleindex keeps track of hashed styles in order to match features\n      styleIndex = {},\n          styleByHash = {},\n          // stylemapindex keeps track of style maps to expose in properties\n      styleMapIndex = {},\n          // atomic geospatial types supported by KML - MultiGeometry is\n      // handled separately\n      geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n          // all root placemarks in the file\n      placemarks = get(doc, 'Placemark'),\n          styles = get(doc, 'Style'),\n          styleMaps = get(doc, 'StyleMap');\n\n      for (var k = 0; k < styles.length; k++) {\n        var hash = okhash(xml2str(styles[k])).toString(16);\n        styleIndex['#' + attr(styles[k], 'id')] = hash;\n        styleByHash[hash] = styles[k];\n      }\n\n      for (var l = 0; l < styleMaps.length; l++) {\n        styleIndex['#' + attr(styleMaps[l], 'id')] = okhash(xml2str(styleMaps[l])).toString(16);\n        var pairs = get(styleMaps[l], 'Pair');\n        var pairsMap = {};\n\n        for (var m = 0; m < pairs.length; m++) {\n          pairsMap[nodeVal(get1(pairs[m], 'key'))] = nodeVal(get1(pairs[m], 'styleUrl'));\n        }\n\n        styleMapIndex['#' + attr(styleMaps[l], 'id')] = pairsMap;\n      }\n\n      for (var j = 0; j < placemarks.length; j++) {\n        gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n      }\n\n      function kmlColor(v) {\n        var color, opacity;\n        v = v || '';\n\n        if (v.substr(0, 1) === '#') {\n          v = v.substr(1);\n        }\n\n        if (v.length === 6 || v.length === 3) {\n          color = v;\n        }\n\n        if (v.length === 8) {\n          opacity = (0, _parseInt2[\"default\"])(v.substr(0, 2), 16) / 255;\n          color = '#' + v.substr(6, 2) + v.substr(4, 2) + v.substr(2, 2);\n        }\n\n        return [color, isNaN(opacity) ? undefined : opacity];\n      }\n\n      function gxCoord(v) {\n        return numarray(v.split(' '));\n      }\n\n      function gxCoords(root) {\n        var elems = get(root, 'coord', 'gx'),\n            coords = [],\n            times = [];\n        if (elems.length === 0) elems = get(root, 'gx:coord');\n\n        for (var i = 0; i < elems.length; i++) {\n          coords.push(gxCoord(nodeVal(elems[i])));\n        }\n\n        var timeElems = get(root, 'when');\n\n        for (var j = 0; j < timeElems.length; j++) {\n          times.push(nodeVal(timeElems[j]));\n        }\n\n        return {\n          coords: coords,\n          times: times\n        };\n      }\n\n      function getGeometry(root) {\n        var geomNode,\n            geomNodes,\n            i,\n            j,\n            k,\n            geoms = [],\n            coordTimes = [];\n\n        if (get1(root, 'MultiGeometry')) {\n          return getGeometry(get1(root, 'MultiGeometry'));\n        }\n\n        if (get1(root, 'MultiTrack')) {\n          return getGeometry(get1(root, 'MultiTrack'));\n        }\n\n        if (get1(root, 'gx:MultiTrack')) {\n          return getGeometry(get1(root, 'gx:MultiTrack'));\n        }\n\n        for (i = 0; i < geotypes.length; i++) {\n          geomNodes = get(root, geotypes[i]);\n\n          if (geomNodes) {\n            for (j = 0; j < geomNodes.length; j++) {\n              geomNode = geomNodes[j];\n\n              if (geotypes[i] === 'Point') {\n                geoms.push({\n                  type: 'Point',\n                  coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                });\n              } else if (geotypes[i] === 'LineString') {\n                geoms.push({\n                  type: 'LineString',\n                  coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                });\n              } else if (geotypes[i] === 'Polygon') {\n                var rings = get(geomNode, 'LinearRing'),\n                    coords = [];\n\n                for (k = 0; k < rings.length; k++) {\n                  coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                }\n\n                geoms.push({\n                  type: 'Polygon',\n                  coordinates: coords\n                });\n              } else if (geotypes[i] === 'Track' || geotypes[i] === 'gx:Track') {\n                var track = gxCoords(geomNode);\n                geoms.push({\n                  type: 'LineString',\n                  coordinates: track.coords\n                });\n                if (track.times.length) coordTimes.push(track.times);\n              }\n            }\n          }\n        }\n\n        return {\n          geoms: geoms,\n          coordTimes: coordTimes\n        };\n      }\n\n      function getPlacemark(root) {\n        var geomsAndTimes = getGeometry(root),\n            i,\n            properties = {},\n            name = nodeVal(get1(root, 'name')),\n            address = nodeVal(get1(root, 'address')),\n            styleUrl = nodeVal(get1(root, 'styleUrl')),\n            description = nodeVal(get1(root, 'description')),\n            timeSpan = get1(root, 'TimeSpan'),\n            timeStamp = get1(root, 'TimeStamp'),\n            extendedData = get1(root, 'ExtendedData'),\n            lineStyle = get1(root, 'LineStyle'),\n            polyStyle = get1(root, 'PolyStyle'),\n            visibility = get1(root, 'visibility');\n        if (!geomsAndTimes.geoms.length) return [];\n        if (name) properties.name = name;\n        if (address) properties.address = address;\n\n        if (styleUrl) {\n          if (styleUrl[0] !== '#') {\n            styleUrl = '#' + styleUrl;\n          }\n\n          properties.styleUrl = styleUrl;\n\n          if (styleIndex[styleUrl]) {\n            properties.styleHash = styleIndex[styleUrl];\n          }\n\n          if (styleMapIndex[styleUrl]) {\n            properties.styleMapHash = styleMapIndex[styleUrl];\n            properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n          } // Try to populate the lineStyle or polyStyle since we got the style hash\n\n\n          var style = styleByHash[properties.styleHash];\n\n          if (style) {\n            if (!lineStyle) lineStyle = get1(style, 'LineStyle');\n            if (!polyStyle) polyStyle = get1(style, 'PolyStyle');\n            var iconStyle = get1(style, 'IconStyle');\n\n            if (iconStyle) {\n              var icon = get1(iconStyle, 'Icon');\n\n              if (icon) {\n                var href = nodeVal(get1(icon, 'href'));\n                if (href) properties.icon = href;\n              }\n            }\n          }\n        }\n\n        if (description) properties.description = description;\n\n        if (timeSpan) {\n          var begin = nodeVal(get1(timeSpan, 'begin'));\n          var end = nodeVal(get1(timeSpan, 'end'));\n          properties.timespan = {\n            begin: begin,\n            end: end\n          };\n        }\n\n        if (timeStamp) {\n          properties.timestamp = nodeVal(get1(timeStamp, 'when'));\n        }\n\n        if (lineStyle) {\n          var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n              color = linestyles[0],\n              opacity = linestyles[1],\n              width = (0, _parseFloat2[\"default\"])(nodeVal(get1(lineStyle, 'width')));\n          if (color) properties.stroke = color;\n          if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n          if (!isNaN(width)) properties['stroke-width'] = width;\n        }\n\n        if (polyStyle) {\n          var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n              pcolor = polystyles[0],\n              popacity = polystyles[1],\n              fill = nodeVal(get1(polyStyle, 'fill')),\n              outline = nodeVal(get1(polyStyle, 'outline'));\n          if (pcolor) properties.fill = pcolor;\n          if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n          if (fill) properties['fill-opacity'] = fill === '1' ? properties['fill-opacity'] || 1 : 0;\n          if (outline) properties['stroke-opacity'] = outline === '1' ? properties['stroke-opacity'] || 1 : 0;\n        }\n\n        if (extendedData) {\n          var datas = get(extendedData, 'Data'),\n              simpleDatas = get(extendedData, 'SimpleData');\n\n          for (i = 0; i < datas.length; i++) {\n            properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n          }\n\n          for (i = 0; i < simpleDatas.length; i++) {\n            properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n          }\n        }\n\n        if (visibility) {\n          properties.visibility = nodeVal(visibility);\n        }\n\n        if (geomsAndTimes.coordTimes.length) {\n          properties.coordTimes = geomsAndTimes.coordTimes.length === 1 ? geomsAndTimes.coordTimes[0] : geomsAndTimes.coordTimes;\n        }\n\n        var feature = {\n          type: 'Feature',\n          geometry: geomsAndTimes.geoms.length === 1 ? geomsAndTimes.geoms[0] : {\n            type: 'GeometryCollection',\n            geometries: geomsAndTimes.geoms\n          },\n          properties: properties\n        };\n        if (attr(root, 'id')) feature.id = attr(root, 'id');\n        return [feature];\n      }\n\n      return gj;\n    },\n    gpx: function gpx(doc) {\n      var i,\n          tracks = get(doc, 'trk'),\n          routes = get(doc, 'rte'),\n          waypoints = get(doc, 'wpt'),\n          // a feature collection\n      gj = fc(),\n          feature;\n\n      for (i = 0; i < tracks.length; i++) {\n        feature = getTrack(tracks[i]);\n        if (feature) gj.features.push(feature);\n      }\n\n      for (i = 0; i < routes.length; i++) {\n        feature = getRoute(routes[i]);\n        if (feature) gj.features.push(feature);\n      }\n\n      for (i = 0; i < waypoints.length; i++) {\n        gj.features.push(getPoint(waypoints[i]));\n      }\n\n      function initializeArray(arr, size) {\n        for (var h = 0; h < size; h++) {\n          arr.push(null);\n        }\n\n        return arr;\n      }\n\n      function getPoints(node, pointname) {\n        var pts = get(node, pointname),\n            line = [],\n            times = [],\n            heartRates = [],\n            l = pts.length;\n        if (l < 2) return {}; // Invalid line in GeoJSON\n\n        for (var i = 0; i < l; i++) {\n          var c = coordPair(pts[i]);\n          line.push(c.coordinates);\n          if (c.time) times.push(c.time);\n\n          if (c.heartRate || heartRates.length) {\n            if (!heartRates.length) initializeArray(heartRates, i);\n            heartRates.push(c.heartRate || null);\n          }\n        }\n\n        return {\n          line: line,\n          times: times,\n          heartRates: heartRates\n        };\n      }\n\n      function getTrack(node) {\n        var segments = get(node, 'trkseg'),\n            track = [],\n            times = [],\n            heartRates = [],\n            line;\n\n        for (var i = 0; i < segments.length; i++) {\n          line = getPoints(segments[i], 'trkpt');\n\n          if (line) {\n            if (line.line) track.push(line.line);\n            if (line.times && line.times.length) times.push(line.times);\n\n            if (heartRates.length || line.heartRates && line.heartRates.length) {\n              if (!heartRates.length) {\n                for (var s = 0; s < i; s++) {\n                  heartRates.push(initializeArray([], track[s].length));\n                }\n              }\n\n              if (line.heartRates && line.heartRates.length) {\n                heartRates.push(line.heartRates);\n              } else {\n                heartRates.push(initializeArray([], line.line.length || 0));\n              }\n            }\n          }\n        }\n\n        if (track.length === 0) return;\n        var properties = getProperties(node);\n        extend(properties, getLineStyle(get1(node, 'extensions')));\n        if (times.length) properties.coordTimes = track.length === 1 ? times[0] : times;\n        if (heartRates.length) properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n        return {\n          type: 'Feature',\n          properties: properties,\n          geometry: {\n            type: track.length === 1 ? 'LineString' : 'MultiLineString',\n            coordinates: track.length === 1 ? track[0] : track\n          }\n        };\n      }\n\n      function getRoute(node) {\n        var line = getPoints(node, 'rtept');\n        if (!line.line) return;\n        var prop = getProperties(node);\n        extend(prop, getLineStyle(get1(node, 'extensions')));\n        var routeObj = {\n          type: 'Feature',\n          properties: prop,\n          geometry: {\n            type: 'LineString',\n            coordinates: line.line\n          }\n        };\n        return routeObj;\n      }\n\n      function getPoint(node) {\n        var prop = getProperties(node);\n        extend(prop, getMulti(node, ['sym']));\n        return {\n          type: 'Feature',\n          properties: prop,\n          geometry: {\n            type: 'Point',\n            coordinates: coordPair(node).coordinates\n          }\n        };\n      }\n\n      function getLineStyle(extensions) {\n        var style = {};\n\n        if (extensions) {\n          var lineStyle = get1(extensions, 'line');\n\n          if (lineStyle) {\n            var color = nodeVal(get1(lineStyle, 'color')),\n                opacity = (0, _parseFloat2[\"default\"])(nodeVal(get1(lineStyle, 'opacity'))),\n                width = (0, _parseFloat2[\"default\"])(nodeVal(get1(lineStyle, 'width')));\n            if (color) style.stroke = color;\n            if (!isNaN(opacity)) style['stroke-opacity'] = opacity; // GPX width is in mm, convert to px with 96 px per inch\n\n            if (!isNaN(width)) style['stroke-width'] = width * 96 / 25.4;\n          }\n        }\n\n        return style;\n      }\n\n      function getProperties(node) {\n        var prop = getMulti(node, ['name', 'cmt', 'desc', 'type', 'time', 'keywords']),\n            links = get(node, 'link');\n        if (links.length) prop.links = [];\n\n        for (var i = 0, link; i < links.length; i++) {\n          link = {\n            href: attr(links[i], 'href')\n          };\n          extend(link, getMulti(links[i], ['text', 'type']));\n          prop.links.push(link);\n        }\n\n        return prop;\n      }\n\n      return gj;\n    }\n  };\n  return t;\n}();\n\nexports.toGeoJSON = toGeoJSON;\nif (typeof module !== 'undefined') module.exports = toGeoJSON;","map":{"version":3,"sources":["/Users/justen/Projects/Apps/kml_convert/static/togeojson.js"],"names":["toGeoJSON","removeSpace","trimSpace","splitSpace","okhash","x","length","i","h","charCodeAt","get","y","getElementsByTagName","attr","getAttribute","attrf","get1","n","norm","el","normalize","numarray","j","o","nodeVal","textContent","getMulti","ys","k","extend","coord1","v","replace","split","coord","coords","push","coordPair","ll","ele","heartRate","time","e","isNaN","coordinates","fc","type","features","serializer","XMLSerializer","isNodeEnv","process","browser","isTitaniumEnv","Titanium","exports","require","Error","xml2str","str","xml","undefined","serializeToString","t","kml","doc","gj","styleIndex","styleByHash","styleMapIndex","geotypes","placemarks","styles","styleMaps","hash","toString","l","pairs","pairsMap","m","concat","getPlacemark","kmlColor","color","opacity","substr","gxCoord","gxCoords","root","elems","times","timeElems","getGeometry","geomNode","geomNodes","geoms","coordTimes","rings","track","geomsAndTimes","properties","name","address","styleUrl","description","timeSpan","timeStamp","extendedData","lineStyle","polyStyle","visibility","styleHash","styleMapHash","normal","style","iconStyle","icon","href","begin","end","timespan","timestamp","linestyles","width","stroke","polystyles","pcolor","popacity","fill","outline","datas","simpleDatas","feature","geometry","geometries","id","gpx","tracks","routes","waypoints","getTrack","getRoute","getPoint","initializeArray","arr","size","getPoints","node","pointname","pts","line","heartRates","c","segments","s","getProperties","getLineStyle","prop","routeObj","extensions","links","link","module"],"mappings":";;;;;;;;;;;;;;;;AAAO,IAAIA,SAAS,GAAI,YAAW;AAC/B;;AAEA,MAAIC,WAAW,GAAG,MAAlB;AAAA,MACIC,SAAS,GAAG,YADhB;AAAA,MAEIC,UAAU,GAAG,KAFjB,CAH+B,CAM/B;;AACA,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACf,QAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACC,MAAb,EAAqB,OAAO,CAAP;;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAApB,EAAuBD,CAAC,GAAGF,CAAC,CAACC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtCC,MAAAA,CAAC,GAAI,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAZ,GAAiBH,CAAC,CAACI,UAAF,CAAaF,CAAb,CAAjB,GAAmC,CAAvC;AACH;;AAAC,WAAOC,CAAP;AACL,GAZ8B,CAa/B;;;AACA,WAASE,GAAT,CAAaL,CAAb,EAAgBM,CAAhB,EAAmB;AAAE,WAAON,CAAC,CAACO,oBAAF,CAAuBD,CAAvB,CAAP;AAAmC;;AACxD,WAASE,IAAT,CAAcR,CAAd,EAAiBM,CAAjB,EAAoB;AAAE,WAAON,CAAC,CAACS,YAAF,CAAeH,CAAf,CAAP;AAA2B;;AACjD,WAASI,KAAT,CAAeV,CAAf,EAAkBM,CAAlB,EAAqB;AAAE,WAAO,6BAAWE,IAAI,CAACR,CAAD,EAAIM,CAAJ,CAAf,CAAP;AAAgC,GAhBxB,CAiB/B;;;AACA,WAASK,IAAT,CAAcX,CAAd,EAAiBM,CAAjB,EAAoB;AAAE,QAAIM,CAAC,GAAGP,GAAG,CAACL,CAAD,EAAIM,CAAJ,CAAX;AAAmB,WAAOM,CAAC,CAACX,MAAF,GAAWW,CAAC,CAAC,CAAD,CAAZ,GAAkB,IAAzB;AAAgC,GAlB1C,CAmB/B;;;AACA,WAASC,IAAT,CAAcC,EAAd,EAAkB;AAAE,QAAIA,EAAE,CAACC,SAAP,EAAkB;AAAED,MAAAA,EAAE,CAACC,SAAH;AAAiB;;AAAC,WAAOD,EAAP;AAAY,GApBvC,CAqB/B;;;AACA,WAASE,QAAT,CAAkBhB,CAAlB,EAAqB;AACjB,SAAK,IAAIiB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,EAApB,EAAwBD,CAAC,GAAGjB,CAAC,CAACC,MAA9B,EAAsCgB,CAAC,EAAvC,EAA2C;AAAEC,MAAAA,CAAC,CAACD,CAAD,CAAD,GAAO,6BAAWjB,CAAC,CAACiB,CAAD,CAAZ,CAAP;AAA0B;;AACvE,WAAOC,CAAP;AACH,GAzB8B,CA0B/B;;;AACA,WAASC,OAAT,CAAiBnB,CAAjB,EAAoB;AAChB,QAAIA,CAAJ,EAAO;AAAEa,MAAAA,IAAI,CAACb,CAAD,CAAJ;AAAU;;AACnB,WAAQA,CAAC,IAAIA,CAAC,CAACoB,WAAR,IAAwB,EAA/B;AACH,GA9B8B,CA+B/B;;;AACA,WAASC,QAAT,CAAkBrB,CAAlB,EAAqBsB,EAArB,EAAyB;AACrB,QAAIJ,CAAC,GAAG,EAAR;AAAA,QAAYN,CAAZ;AAAA,QAAeW,CAAf;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,EAAE,CAACrB,MAAnB,EAA2BsB,CAAC,EAA5B,EAAgC;AAC5BX,MAAAA,CAAC,GAAGD,IAAI,CAACX,CAAD,EAAIsB,EAAE,CAACC,CAAD,CAAN,CAAR;AACA,UAAIX,CAAJ,EAAOM,CAAC,CAACI,EAAE,CAACC,CAAD,CAAH,CAAD,GAAWJ,OAAO,CAACP,CAAD,CAAlB;AACV;;AACD,WAAOM,CAAP;AACH,GAvC8B,CAwC/B;;;AACA,WAASM,MAAT,CAAgBxB,CAAhB,EAAmBM,CAAnB,EAAsB;AAAE,SAAK,IAAIiB,CAAT,IAAcjB,CAAd;AAAiBN,MAAAA,CAAC,CAACuB,CAAD,CAAD,GAAOjB,CAAC,CAACiB,CAAD,CAAR;AAAjB;AAA+B,GAzCxB,CA0C/B;;;AACA,WAASE,MAAT,CAAgBC,CAAhB,EAAmB;AAAE,WAAOV,QAAQ,CAACU,CAAC,CAACC,OAAF,CAAU/B,WAAV,EAAuB,EAAvB,EAA2BgC,KAA3B,CAAiC,GAAjC,CAAD,CAAf;AAAyD,GA3C/C,CA4C/B;;;AACA,WAASC,KAAT,CAAeH,CAAf,EAAkB;AACd,QAAII,MAAM,GAAGJ,CAAC,CAACC,OAAF,CAAU9B,SAAV,EAAqB,EAArB,EAAyB+B,KAAzB,CAA+B9B,UAA/B,CAAb;AAAA,QACIoB,CAAC,GAAG,EADR;;AAEA,SAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,MAAM,CAAC7B,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpCgB,MAAAA,CAAC,CAACa,IAAF,CAAON,MAAM,CAACK,MAAM,CAAC5B,CAAD,CAAP,CAAb;AACH;;AACD,WAAOgB,CAAP;AACH;;AACD,WAASc,SAAT,CAAmBhC,CAAnB,EAAsB;AAClB,QAAIiC,EAAE,GAAG,CAACvB,KAAK,CAACV,CAAD,EAAI,KAAJ,CAAN,EAAkBU,KAAK,CAACV,CAAD,EAAI,KAAJ,CAAvB,CAAT;AAAA,QACIkC,GAAG,GAAGvB,IAAI,CAACX,CAAD,EAAI,KAAJ,CADd;AAAA,QAEI;AACAmC,IAAAA,SAAS,GAAGxB,IAAI,CAACX,CAAD,EAAI,WAAJ,CAAJ,IAAwBW,IAAI,CAACX,CAAD,EAAI,IAAJ,CAH5C;AAAA,QAIIoC,IAAI,GAAGzB,IAAI,CAACX,CAAD,EAAI,MAAJ,CAJf;AAAA,QAKIqC,CALJ;;AAMA,QAAIH,GAAJ,EAAS;AACLG,MAAAA,CAAC,GAAG,6BAAWlB,OAAO,CAACe,GAAD,CAAlB,CAAJ;;AACA,UAAI,CAACI,KAAK,CAACD,CAAD,CAAV,EAAe;AACXJ,QAAAA,EAAE,CAACF,IAAH,CAAQM,CAAR;AACH;AACJ;;AACD,WAAO;AACHE,MAAAA,WAAW,EAAEN,EADV;AAEHG,MAAAA,IAAI,EAAEA,IAAI,GAAGjB,OAAO,CAACiB,IAAD,CAAV,GAAmB,IAF1B;AAGHD,MAAAA,SAAS,EAAEA,SAAS,GAAG,6BAAWhB,OAAO,CAACgB,SAAD,CAAlB,CAAH,GAAoC;AAHrD,KAAP;AAKH,GAvE8B,CAyE/B;;;AACA,WAASK,EAAT,GAAc;AACV,WAAO;AACHC,MAAAA,IAAI,EAAE,mBADH;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH;;AAED,MAAIC,UAAJ;;AACA,MAAI,OAAOC,aAAP,KAAyB,WAA7B,EAA0C;AACtC;AACAD,IAAAA,UAAU,GAAG,IAAIC,aAAJ,EAAb;AACH,GAHD,MAGO;AACH,QAAIC,SAAS,GAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,CAACA,OAAO,CAACC,OAAzD;AACA,QAAIC,aAAa,GAAI,OAAOC,QAAP,KAAoB,QAAzC;;AACA,QAAI,OAAOC,OAAP,KAAmB,QAAnB,KAAgCL,SAAS,IAAIG,aAA7C,CAAJ,EAAiE;AAC7DL,MAAAA,UAAU,GAAG,KAAKQ,OAAO,CAAC,QAAD,CAAP,CAAkBP,aAAvB,GAAb;AACH,KAFD,MAEO;AACH,YAAM,IAAIQ,KAAJ,CAAU,iCAAV,CAAN;AACH;AACJ;;AACD,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB;AACA;;AACA;AACA,QAAIA,GAAG,CAACC,GAAJ,KAAYC,SAAhB,EAA2B,OAAOF,GAAG,CAACC,GAAX;AAC3B,WAAOZ,UAAU,CAACc,iBAAX,CAA6BH,GAA7B,CAAP;AACH;;AAED,MAAII,CAAC,GAAG;AACJC,IAAAA,GAAG,EAAC,aAASC,GAAT,EAAc;AAEd,UAAIC,EAAE,GAAGrB,EAAE,EAAX;AAAA,UACI;AACAsB,MAAAA,UAAU,GAAG,EAFjB;AAAA,UAEqBC,WAAW,GAAG,EAFnC;AAAA,UAGI;AACAC,MAAAA,aAAa,GAAG,EAJpB;AAAA,UAKI;AACA;AACAC,MAAAA,QAAQ,GAAG,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,UAA5C,CAPf;AAAA,UAQI;AACAC,MAAAA,UAAU,GAAG7D,GAAG,CAACuD,GAAD,EAAM,WAAN,CATpB;AAAA,UAUIO,MAAM,GAAG9D,GAAG,CAACuD,GAAD,EAAM,OAAN,CAVhB;AAAA,UAWIQ,SAAS,GAAG/D,GAAG,CAACuD,GAAD,EAAM,UAAN,CAXnB;;AAaA,WAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,MAAM,CAAClE,MAA3B,EAAmCsB,CAAC,EAApC,EAAwC;AACpC,YAAI8C,IAAI,GAAGtE,MAAM,CAACsD,OAAO,CAACc,MAAM,CAAC5C,CAAD,CAAP,CAAR,CAAN,CAA2B+C,QAA3B,CAAoC,EAApC,CAAX;AACAR,QAAAA,UAAU,CAAC,MAAMtD,IAAI,CAAC2D,MAAM,CAAC5C,CAAD,CAAP,EAAY,IAAZ,CAAX,CAAV,GAA0C8C,IAA1C;AACAN,QAAAA,WAAW,CAACM,IAAD,CAAX,GAAoBF,MAAM,CAAC5C,CAAD,CAA1B;AACH;;AACD,WAAK,IAAIgD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACnE,MAA9B,EAAsCsE,CAAC,EAAvC,EAA2C;AACvCT,QAAAA,UAAU,CAAC,MAAMtD,IAAI,CAAC4D,SAAS,CAACG,CAAD,CAAV,EAAe,IAAf,CAAX,CAAV,GAA6CxE,MAAM,CAACsD,OAAO,CAACe,SAAS,CAACG,CAAD,CAAV,CAAR,CAAN,CAA8BD,QAA9B,CAAuC,EAAvC,CAA7C;AACA,YAAIE,KAAK,GAAGnE,GAAG,CAAC+D,SAAS,CAACG,CAAD,CAAV,EAAe,MAAf,CAAf;AACA,YAAIE,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACvE,MAA1B,EAAkCyE,CAAC,EAAnC,EAAuC;AACnCD,UAAAA,QAAQ,CAACtD,OAAO,CAACR,IAAI,CAAC6D,KAAK,CAACE,CAAD,CAAN,EAAW,KAAX,CAAL,CAAR,CAAR,GAA2CvD,OAAO,CAACR,IAAI,CAAC6D,KAAK,CAACE,CAAD,CAAN,EAAW,UAAX,CAAL,CAAlD;AACH;;AACDV,QAAAA,aAAa,CAAC,MAAMxD,IAAI,CAAC4D,SAAS,CAACG,CAAD,CAAV,EAAe,IAAf,CAAX,CAAb,GAAgDE,QAAhD;AAEH;;AACD,WAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,UAAU,CAACjE,MAA/B,EAAuCgB,CAAC,EAAxC,EAA4C;AACxC4C,QAAAA,EAAE,CAACnB,QAAH,GAAcmB,EAAE,CAACnB,QAAH,CAAYiC,MAAZ,CAAmBC,YAAY,CAACV,UAAU,CAACjD,CAAD,CAAX,CAA/B,CAAd;AACH;;AACD,eAAS4D,QAAT,CAAkBnD,CAAlB,EAAqB;AACjB,YAAIoD,KAAJ,EAAWC,OAAX;AACArD,QAAAA,CAAC,GAAGA,CAAC,IAAI,EAAT;;AACA,YAAIA,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAAEtD,UAAAA,CAAC,GAAGA,CAAC,CAACsD,MAAF,CAAS,CAAT,CAAJ;AAAkB;;AAChD,YAAItD,CAAC,CAACzB,MAAF,KAAa,CAAb,IAAkByB,CAAC,CAACzB,MAAF,KAAa,CAAnC,EAAsC;AAAE6E,UAAAA,KAAK,GAAGpD,CAAR;AAAY;;AACpD,YAAIA,CAAC,CAACzB,MAAF,KAAa,CAAjB,EAAoB;AAChB8E,UAAAA,OAAO,GAAG,2BAASrD,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAT,EAAyB,EAAzB,IAA+B,GAAzC;AACAF,UAAAA,KAAK,GAAG,MAAMpD,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAN,GACJtD,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAAZ,CADI,GAEJtD,CAAC,CAACsD,MAAF,CAAS,CAAT,EAAY,CAAZ,CAFJ;AAGH;;AACD,eAAO,CAACF,KAAD,EAAQxC,KAAK,CAACyC,OAAD,CAAL,GAAiBvB,SAAjB,GAA6BuB,OAArC,CAAP;AACH;;AACD,eAASE,OAAT,CAAiBvD,CAAjB,EAAoB;AAAE,eAAOV,QAAQ,CAACU,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAD,CAAf;AAAgC;;AACtD,eAASsD,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,YAAIC,KAAK,GAAG/E,GAAG,CAAC8E,IAAD,EAAO,OAAP,EAAgB,IAAhB,CAAf;AAAA,YAAsCrD,MAAM,GAAG,EAA/C;AAAA,YAAmDuD,KAAK,GAAG,EAA3D;AACA,YAAID,KAAK,CAACnF,MAAN,KAAiB,CAArB,EAAwBmF,KAAK,GAAG/E,GAAG,CAAC8E,IAAD,EAAO,UAAP,CAAX;;AACxB,aAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkF,KAAK,CAACnF,MAA1B,EAAkCC,CAAC,EAAnC;AAAuC4B,UAAAA,MAAM,CAACC,IAAP,CAAYkD,OAAO,CAAC9D,OAAO,CAACiE,KAAK,CAAClF,CAAD,CAAN,CAAR,CAAnB;AAAvC;;AACA,YAAIoF,SAAS,GAAGjF,GAAG,CAAC8E,IAAD,EAAO,MAAP,CAAnB;;AACA,aAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqE,SAAS,CAACrF,MAA9B,EAAsCgB,CAAC,EAAvC;AAA2CoE,UAAAA,KAAK,CAACtD,IAAN,CAAWZ,OAAO,CAACmE,SAAS,CAACrE,CAAD,CAAV,CAAlB;AAA3C;;AACA,eAAO;AACHa,UAAAA,MAAM,EAAEA,MADL;AAEHuD,UAAAA,KAAK,EAAEA;AAFJ,SAAP;AAIH;;AACD,eAASE,WAAT,CAAqBJ,IAArB,EAA2B;AACvB,YAAIK,QAAJ;AAAA,YAAcC,SAAd;AAAA,YAAyBvF,CAAzB;AAAA,YAA4Be,CAA5B;AAAA,YAA+BM,CAA/B;AAAA,YAAkCmE,KAAK,GAAG,EAA1C;AAAA,YAA8CC,UAAU,GAAG,EAA3D;;AACA,YAAIhF,IAAI,CAACwE,IAAD,EAAO,eAAP,CAAR,EAAiC;AAAE,iBAAOI,WAAW,CAAC5E,IAAI,CAACwE,IAAD,EAAO,eAAP,CAAL,CAAlB;AAAkD;;AACrF,YAAIxE,IAAI,CAACwE,IAAD,EAAO,YAAP,CAAR,EAA8B;AAAE,iBAAOI,WAAW,CAAC5E,IAAI,CAACwE,IAAD,EAAO,YAAP,CAAL,CAAlB;AAA+C;;AAC/E,YAAIxE,IAAI,CAACwE,IAAD,EAAO,eAAP,CAAR,EAAiC;AAAE,iBAAOI,WAAW,CAAC5E,IAAI,CAACwE,IAAD,EAAO,eAAP,CAAL,CAAlB;AAAkD;;AACrF,aAAKjF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+D,QAAQ,CAAChE,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClCuF,UAAAA,SAAS,GAAGpF,GAAG,CAAC8E,IAAD,EAAOlB,QAAQ,CAAC/D,CAAD,CAAf,CAAf;;AACA,cAAIuF,SAAJ,EAAe;AACX,iBAAKxE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwE,SAAS,CAACxF,MAA1B,EAAkCgB,CAAC,EAAnC,EAAuC;AACnCuE,cAAAA,QAAQ,GAAGC,SAAS,CAACxE,CAAD,CAApB;;AACA,kBAAIgD,QAAQ,CAAC/D,CAAD,CAAR,KAAgB,OAApB,EAA6B;AACzBwF,gBAAAA,KAAK,CAAC3D,IAAN,CAAW;AACPU,kBAAAA,IAAI,EAAE,OADC;AAEPF,kBAAAA,WAAW,EAAEd,MAAM,CAACN,OAAO,CAACR,IAAI,CAAC6E,QAAD,EAAW,aAAX,CAAL,CAAR;AAFZ,iBAAX;AAIH,eALD,MAKO,IAAIvB,QAAQ,CAAC/D,CAAD,CAAR,KAAgB,YAApB,EAAkC;AACrCwF,gBAAAA,KAAK,CAAC3D,IAAN,CAAW;AACPU,kBAAAA,IAAI,EAAE,YADC;AAEPF,kBAAAA,WAAW,EAAEV,KAAK,CAACV,OAAO,CAACR,IAAI,CAAC6E,QAAD,EAAW,aAAX,CAAL,CAAR;AAFX,iBAAX;AAIH,eALM,MAKA,IAAIvB,QAAQ,CAAC/D,CAAD,CAAR,KAAgB,SAApB,EAA+B;AAClC,oBAAI0F,KAAK,GAAGvF,GAAG,CAACmF,QAAD,EAAW,YAAX,CAAf;AAAA,oBACI1D,MAAM,GAAG,EADb;;AAEA,qBAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqE,KAAK,CAAC3F,MAAtB,EAA8BsB,CAAC,EAA/B,EAAmC;AAC/BO,kBAAAA,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACV,OAAO,CAACR,IAAI,CAACiF,KAAK,CAACrE,CAAD,CAAN,EAAW,aAAX,CAAL,CAAR,CAAjB;AACH;;AACDmE,gBAAAA,KAAK,CAAC3D,IAAN,CAAW;AACPU,kBAAAA,IAAI,EAAE,SADC;AAEPF,kBAAAA,WAAW,EAAET;AAFN,iBAAX;AAIH,eAVM,MAUA,IAAImC,QAAQ,CAAC/D,CAAD,CAAR,KAAgB,OAAhB,IACP+D,QAAQ,CAAC/D,CAAD,CAAR,KAAgB,UADb,EACyB;AAC5B,oBAAI2F,KAAK,GAAGX,QAAQ,CAACM,QAAD,CAApB;AACAE,gBAAAA,KAAK,CAAC3D,IAAN,CAAW;AACPU,kBAAAA,IAAI,EAAE,YADC;AAEPF,kBAAAA,WAAW,EAAEsD,KAAK,CAAC/D;AAFZ,iBAAX;AAIA,oBAAI+D,KAAK,CAACR,KAAN,CAAYpF,MAAhB,EAAwB0F,UAAU,CAAC5D,IAAX,CAAgB8D,KAAK,CAACR,KAAtB;AAC3B;AACJ;AACJ;AACJ;;AACD,eAAO;AACHK,UAAAA,KAAK,EAAEA,KADJ;AAEHC,UAAAA,UAAU,EAAEA;AAFT,SAAP;AAIH;;AACD,eAASf,YAAT,CAAsBO,IAAtB,EAA4B;AACxB,YAAIW,aAAa,GAAGP,WAAW,CAACJ,IAAD,CAA/B;AAAA,YAAuCjF,CAAvC;AAAA,YAA0C6F,UAAU,GAAG,EAAvD;AAAA,YACIC,IAAI,GAAG7E,OAAO,CAACR,IAAI,CAACwE,IAAD,EAAO,MAAP,CAAL,CADlB;AAAA,YAEIc,OAAO,GAAG9E,OAAO,CAACR,IAAI,CAACwE,IAAD,EAAO,SAAP,CAAL,CAFrB;AAAA,YAGIe,QAAQ,GAAG/E,OAAO,CAACR,IAAI,CAACwE,IAAD,EAAO,UAAP,CAAL,CAHtB;AAAA,YAIIgB,WAAW,GAAGhF,OAAO,CAACR,IAAI,CAACwE,IAAD,EAAO,aAAP,CAAL,CAJzB;AAAA,YAKIiB,QAAQ,GAAGzF,IAAI,CAACwE,IAAD,EAAO,UAAP,CALnB;AAAA,YAMIkB,SAAS,GAAG1F,IAAI,CAACwE,IAAD,EAAO,WAAP,CANpB;AAAA,YAOImB,YAAY,GAAG3F,IAAI,CAACwE,IAAD,EAAO,cAAP,CAPvB;AAAA,YAQIoB,SAAS,GAAG5F,IAAI,CAACwE,IAAD,EAAO,WAAP,CARpB;AAAA,YASIqB,SAAS,GAAG7F,IAAI,CAACwE,IAAD,EAAO,WAAP,CATpB;AAAA,YAUIsB,UAAU,GAAG9F,IAAI,CAACwE,IAAD,EAAO,YAAP,CAVrB;AAYA,YAAI,CAACW,aAAa,CAACJ,KAAd,CAAoBzF,MAAzB,EAAiC,OAAO,EAAP;AACjC,YAAI+F,IAAJ,EAAUD,UAAU,CAACC,IAAX,GAAkBA,IAAlB;AACV,YAAIC,OAAJ,EAAaF,UAAU,CAACE,OAAX,GAAqBA,OAArB;;AACb,YAAIC,QAAJ,EAAc;AACV,cAAIA,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACrBA,YAAAA,QAAQ,GAAG,MAAMA,QAAjB;AACH;;AAEDH,UAAAA,UAAU,CAACG,QAAX,GAAsBA,QAAtB;;AACA,cAAIpC,UAAU,CAACoC,QAAD,CAAd,EAA0B;AACtBH,YAAAA,UAAU,CAACW,SAAX,GAAuB5C,UAAU,CAACoC,QAAD,CAAjC;AACH;;AACD,cAAIlC,aAAa,CAACkC,QAAD,CAAjB,EAA6B;AACzBH,YAAAA,UAAU,CAACY,YAAX,GAA0B3C,aAAa,CAACkC,QAAD,CAAvC;AACAH,YAAAA,UAAU,CAACW,SAAX,GAAuB5C,UAAU,CAACE,aAAa,CAACkC,QAAD,CAAb,CAAwBU,MAAzB,CAAjC;AACH,WAZS,CAaV;;;AACA,cAAIC,KAAK,GAAG9C,WAAW,CAACgC,UAAU,CAACW,SAAZ,CAAvB;;AACA,cAAIG,KAAJ,EAAW;AACP,gBAAI,CAACN,SAAL,EAAgBA,SAAS,GAAG5F,IAAI,CAACkG,KAAD,EAAQ,WAAR,CAAhB;AAChB,gBAAI,CAACL,SAAL,EAAgBA,SAAS,GAAG7F,IAAI,CAACkG,KAAD,EAAQ,WAAR,CAAhB;AAChB,gBAAIC,SAAS,GAAGnG,IAAI,CAACkG,KAAD,EAAQ,WAAR,CAApB;;AACA,gBAAIC,SAAJ,EAAe;AACX,kBAAIC,IAAI,GAAGpG,IAAI,CAACmG,SAAD,EAAY,MAAZ,CAAf;;AACA,kBAAIC,IAAJ,EAAU;AACN,oBAAIC,IAAI,GAAG7F,OAAO,CAACR,IAAI,CAACoG,IAAD,EAAO,MAAP,CAAL,CAAlB;AACA,oBAAIC,IAAJ,EAAUjB,UAAU,CAACgB,IAAX,GAAkBC,IAAlB;AACb;AACJ;AACJ;AACJ;;AACD,YAAIb,WAAJ,EAAiBJ,UAAU,CAACI,WAAX,GAAyBA,WAAzB;;AACjB,YAAIC,QAAJ,EAAc;AACV,cAAIa,KAAK,GAAG9F,OAAO,CAACR,IAAI,CAACyF,QAAD,EAAW,OAAX,CAAL,CAAnB;AACA,cAAIc,GAAG,GAAG/F,OAAO,CAACR,IAAI,CAACyF,QAAD,EAAW,KAAX,CAAL,CAAjB;AACAL,UAAAA,UAAU,CAACoB,QAAX,GAAsB;AAAEF,YAAAA,KAAK,EAAEA,KAAT;AAAgBC,YAAAA,GAAG,EAAEA;AAArB,WAAtB;AACH;;AACD,YAAIb,SAAJ,EAAe;AACXN,UAAAA,UAAU,CAACqB,SAAX,GAAuBjG,OAAO,CAACR,IAAI,CAAC0F,SAAD,EAAY,MAAZ,CAAL,CAA9B;AACH;;AACD,YAAIE,SAAJ,EAAe;AACX,cAAIc,UAAU,GAAGxC,QAAQ,CAAC1D,OAAO,CAACR,IAAI,CAAC4F,SAAD,EAAY,OAAZ,CAAL,CAAR,CAAzB;AAAA,cACIzB,KAAK,GAAGuC,UAAU,CAAC,CAAD,CADtB;AAAA,cAEItC,OAAO,GAAGsC,UAAU,CAAC,CAAD,CAFxB;AAAA,cAGIC,KAAK,GAAG,6BAAWnG,OAAO,CAACR,IAAI,CAAC4F,SAAD,EAAY,OAAZ,CAAL,CAAlB,CAHZ;AAIA,cAAIzB,KAAJ,EAAWiB,UAAU,CAACwB,MAAX,GAAoBzC,KAApB;AACX,cAAI,CAACxC,KAAK,CAACyC,OAAD,CAAV,EAAqBgB,UAAU,CAAC,gBAAD,CAAV,GAA+BhB,OAA/B;AACrB,cAAI,CAACzC,KAAK,CAACgF,KAAD,CAAV,EAAmBvB,UAAU,CAAC,cAAD,CAAV,GAA6BuB,KAA7B;AACtB;;AACD,YAAId,SAAJ,EAAe;AACX,cAAIgB,UAAU,GAAG3C,QAAQ,CAAC1D,OAAO,CAACR,IAAI,CAAC6F,SAAD,EAAY,OAAZ,CAAL,CAAR,CAAzB;AAAA,cACIiB,MAAM,GAAGD,UAAU,CAAC,CAAD,CADvB;AAAA,cAEIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAFzB;AAAA,cAGIG,IAAI,GAAGxG,OAAO,CAACR,IAAI,CAAC6F,SAAD,EAAY,MAAZ,CAAL,CAHlB;AAAA,cAIIoB,OAAO,GAAGzG,OAAO,CAACR,IAAI,CAAC6F,SAAD,EAAY,SAAZ,CAAL,CAJrB;AAKA,cAAIiB,MAAJ,EAAY1B,UAAU,CAAC4B,IAAX,GAAkBF,MAAlB;AACZ,cAAI,CAACnF,KAAK,CAACoF,QAAD,CAAV,EAAsB3B,UAAU,CAAC,cAAD,CAAV,GAA6B2B,QAA7B;AACtB,cAAIC,IAAJ,EAAU5B,UAAU,CAAC,cAAD,CAAV,GAA6B4B,IAAI,KAAK,GAAT,GAAe5B,UAAU,CAAC,cAAD,CAAV,IAA8B,CAA7C,GAAiD,CAA9E;AACV,cAAI6B,OAAJ,EAAa7B,UAAU,CAAC,gBAAD,CAAV,GAA+B6B,OAAO,KAAK,GAAZ,GAAkB7B,UAAU,CAAC,gBAAD,CAAV,IAAgC,CAAlD,GAAsD,CAArF;AAChB;;AACD,YAAIO,YAAJ,EAAkB;AACd,cAAIuB,KAAK,GAAGxH,GAAG,CAACiG,YAAD,EAAe,MAAf,CAAf;AAAA,cACIwB,WAAW,GAAGzH,GAAG,CAACiG,YAAD,EAAe,YAAf,CADrB;;AAGA,eAAKpG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2H,KAAK,CAAC5H,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AAC/B6F,YAAAA,UAAU,CAAC8B,KAAK,CAAC3H,CAAD,CAAL,CAASO,YAAT,CAAsB,MAAtB,CAAD,CAAV,GAA4CU,OAAO,CAACR,IAAI,CAACkH,KAAK,CAAC3H,CAAD,CAAN,EAAW,OAAX,CAAL,CAAnD;AACH;;AACD,eAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4H,WAAW,CAAC7H,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACrC6F,YAAAA,UAAU,CAAC+B,WAAW,CAAC5H,CAAD,CAAX,CAAeO,YAAf,CAA4B,MAA5B,CAAD,CAAV,GAAkDU,OAAO,CAAC2G,WAAW,CAAC5H,CAAD,CAAZ,CAAzD;AACH;AACJ;;AACD,YAAIuG,UAAJ,EAAgB;AACZV,UAAAA,UAAU,CAACU,UAAX,GAAwBtF,OAAO,CAACsF,UAAD,CAA/B;AACH;;AACD,YAAIX,aAAa,CAACH,UAAd,CAAyB1F,MAA7B,EAAqC;AACjC8F,UAAAA,UAAU,CAACJ,UAAX,GAAyBG,aAAa,CAACH,UAAd,CAAyB1F,MAAzB,KAAoC,CAArC,GACpB6F,aAAa,CAACH,UAAd,CAAyB,CAAzB,CADoB,GACUG,aAAa,CAACH,UADhD;AAEH;;AACD,YAAIoC,OAAO,GAAG;AACVtF,UAAAA,IAAI,EAAE,SADI;AAEVuF,UAAAA,QAAQ,EAAGlC,aAAa,CAACJ,KAAd,CAAoBzF,MAApB,KAA+B,CAAhC,GAAqC6F,aAAa,CAACJ,KAAd,CAAoB,CAApB,CAArC,GAA8D;AACpEjD,YAAAA,IAAI,EAAE,oBAD8D;AAEpEwF,YAAAA,UAAU,EAAEnC,aAAa,CAACJ;AAF0C,WAF9D;AAMVK,UAAAA,UAAU,EAAEA;AANF,SAAd;AAQA,YAAIvF,IAAI,CAAC2E,IAAD,EAAO,IAAP,CAAR,EAAsB4C,OAAO,CAACG,EAAR,GAAa1H,IAAI,CAAC2E,IAAD,EAAO,IAAP,CAAjB;AACtB,eAAO,CAAC4C,OAAD,CAAP;AACH;;AACD,aAAOlE,EAAP;AACH,KAjNG;AAkNJsE,IAAAA,GAAG,EAAE,aAASvE,GAAT,EAAc;AACf,UAAI1D,CAAJ;AAAA,UACIkI,MAAM,GAAG/H,GAAG,CAACuD,GAAD,EAAM,KAAN,CADhB;AAAA,UAEIyE,MAAM,GAAGhI,GAAG,CAACuD,GAAD,EAAM,KAAN,CAFhB;AAAA,UAGI0E,SAAS,GAAGjI,GAAG,CAACuD,GAAD,EAAM,KAAN,CAHnB;AAAA,UAII;AACAC,MAAAA,EAAE,GAAGrB,EAAE,EALX;AAAA,UAMIuF,OANJ;;AAOA,WAAK7H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkI,MAAM,CAACnI,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAChC6H,QAAAA,OAAO,GAAGQ,QAAQ,CAACH,MAAM,CAAClI,CAAD,CAAP,CAAlB;AACA,YAAI6H,OAAJ,EAAalE,EAAE,CAACnB,QAAH,CAAYX,IAAZ,CAAiBgG,OAAjB;AAChB;;AACD,WAAK7H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmI,MAAM,CAACpI,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAChC6H,QAAAA,OAAO,GAAGS,QAAQ,CAACH,MAAM,CAACnI,CAAD,CAAP,CAAlB;AACA,YAAI6H,OAAJ,EAAalE,EAAE,CAACnB,QAAH,CAAYX,IAAZ,CAAiBgG,OAAjB;AAChB;;AACD,WAAK7H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoI,SAAS,CAACrI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC2D,QAAAA,EAAE,CAACnB,QAAH,CAAYX,IAAZ,CAAiB0G,QAAQ,CAACH,SAAS,CAACpI,CAAD,CAAV,CAAzB;AACH;;AACD,eAASwI,eAAT,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAChC,aAAK,IAAIzI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyI,IAApB,EAA0BzI,CAAC,EAA3B,EAA+B;AAC3BwI,UAAAA,GAAG,CAAC5G,IAAJ,CAAS,IAAT;AACH;;AACD,eAAO4G,GAAP;AACH;;AACD,eAASE,SAAT,CAAmBC,IAAnB,EAAyBC,SAAzB,EAAoC;AAChC,YAAIC,GAAG,GAAG3I,GAAG,CAACyI,IAAD,EAAOC,SAAP,CAAb;AAAA,YACIE,IAAI,GAAG,EADX;AAAA,YAEI5D,KAAK,GAAG,EAFZ;AAAA,YAGI6D,UAAU,GAAG,EAHjB;AAAA,YAII3E,CAAC,GAAGyE,GAAG,CAAC/I,MAJZ;AAKA,YAAIsE,CAAC,GAAG,CAAR,EAAW,OAAO,EAAP,CANqB,CAMT;;AACvB,aAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqE,CAApB,EAAuBrE,CAAC,EAAxB,EAA4B;AACxB,cAAIiJ,CAAC,GAAGnH,SAAS,CAACgH,GAAG,CAAC9I,CAAD,CAAJ,CAAjB;AACA+I,UAAAA,IAAI,CAAClH,IAAL,CAAUoH,CAAC,CAAC5G,WAAZ;AACA,cAAI4G,CAAC,CAAC/G,IAAN,EAAYiD,KAAK,CAACtD,IAAN,CAAWoH,CAAC,CAAC/G,IAAb;;AACZ,cAAI+G,CAAC,CAAChH,SAAF,IAAe+G,UAAU,CAACjJ,MAA9B,EAAsC;AAClC,gBAAI,CAACiJ,UAAU,CAACjJ,MAAhB,EAAwByI,eAAe,CAACQ,UAAD,EAAahJ,CAAb,CAAf;AACxBgJ,YAAAA,UAAU,CAACnH,IAAX,CAAgBoH,CAAC,CAAChH,SAAF,IAAe,IAA/B;AACH;AACJ;;AACD,eAAO;AACH8G,UAAAA,IAAI,EAAEA,IADH;AAEH5D,UAAAA,KAAK,EAAEA,KAFJ;AAGH6D,UAAAA,UAAU,EAAEA;AAHT,SAAP;AAKH;;AACD,eAASX,QAAT,CAAkBO,IAAlB,EAAwB;AACpB,YAAIM,QAAQ,GAAG/I,GAAG,CAACyI,IAAD,EAAO,QAAP,CAAlB;AAAA,YACIjD,KAAK,GAAG,EADZ;AAAA,YAEIR,KAAK,GAAG,EAFZ;AAAA,YAGI6D,UAAU,GAAG,EAHjB;AAAA,YAIID,IAJJ;;AAKA,aAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkJ,QAAQ,CAACnJ,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtC+I,UAAAA,IAAI,GAAGJ,SAAS,CAACO,QAAQ,CAAClJ,CAAD,CAAT,EAAc,OAAd,CAAhB;;AACA,cAAI+I,IAAJ,EAAU;AACN,gBAAIA,IAAI,CAACA,IAAT,EAAepD,KAAK,CAAC9D,IAAN,CAAWkH,IAAI,CAACA,IAAhB;AACf,gBAAIA,IAAI,CAAC5D,KAAL,IAAc4D,IAAI,CAAC5D,KAAL,CAAWpF,MAA7B,EAAqCoF,KAAK,CAACtD,IAAN,CAAWkH,IAAI,CAAC5D,KAAhB;;AACrC,gBAAI6D,UAAU,CAACjJ,MAAX,IAAsBgJ,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBjJ,MAA7D,EAAsE;AAClE,kBAAI,CAACiJ,UAAU,CAACjJ,MAAhB,EAAwB;AACpB,qBAAK,IAAIoJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnJ,CAApB,EAAuBmJ,CAAC,EAAxB,EAA4B;AACxBH,kBAAAA,UAAU,CAACnH,IAAX,CAAgB2G,eAAe,CAAC,EAAD,EAAK7C,KAAK,CAACwD,CAAD,CAAL,CAASpJ,MAAd,CAA/B;AACH;AACJ;;AACD,kBAAIgJ,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBjJ,MAAvC,EAA+C;AAC3CiJ,gBAAAA,UAAU,CAACnH,IAAX,CAAgBkH,IAAI,CAACC,UAArB;AACH,eAFD,MAEO;AACHA,gBAAAA,UAAU,CAACnH,IAAX,CAAgB2G,eAAe,CAAC,EAAD,EAAKO,IAAI,CAACA,IAAL,CAAUhJ,MAAV,IAAoB,CAAzB,CAA/B;AACH;AACJ;AACJ;AACJ;;AACD,YAAI4F,KAAK,CAAC5F,MAAN,KAAiB,CAArB,EAAwB;AACxB,YAAI8F,UAAU,GAAGuD,aAAa,CAACR,IAAD,CAA9B;AACAtH,QAAAA,MAAM,CAACuE,UAAD,EAAawD,YAAY,CAAC5I,IAAI,CAACmI,IAAD,EAAO,YAAP,CAAL,CAAzB,CAAN;AACA,YAAIzD,KAAK,CAACpF,MAAV,EAAkB8F,UAAU,CAACJ,UAAX,GAAwBE,KAAK,CAAC5F,MAAN,KAAiB,CAAjB,GAAqBoF,KAAK,CAAC,CAAD,CAA1B,GAAgCA,KAAxD;AAClB,YAAI6D,UAAU,CAACjJ,MAAf,EAAuB8F,UAAU,CAACmD,UAAX,GAAwBrD,KAAK,CAAC5F,MAAN,KAAiB,CAAjB,GAAqBiJ,UAAU,CAAC,CAAD,CAA/B,GAAqCA,UAA7D;AACvB,eAAO;AACHzG,UAAAA,IAAI,EAAE,SADH;AAEHsD,UAAAA,UAAU,EAAEA,UAFT;AAGHiC,UAAAA,QAAQ,EAAE;AACNvF,YAAAA,IAAI,EAAEoD,KAAK,CAAC5F,MAAN,KAAiB,CAAjB,GAAqB,YAArB,GAAoC,iBADpC;AAENsC,YAAAA,WAAW,EAAEsD,KAAK,CAAC5F,MAAN,KAAiB,CAAjB,GAAqB4F,KAAK,CAAC,CAAD,CAA1B,GAAgCA;AAFvC;AAHP,SAAP;AAQH;;AACD,eAAS2C,QAAT,CAAkBM,IAAlB,EAAwB;AACpB,YAAIG,IAAI,GAAGJ,SAAS,CAACC,IAAD,EAAO,OAAP,CAApB;AACA,YAAI,CAACG,IAAI,CAACA,IAAV,EAAgB;AAChB,YAAIO,IAAI,GAAGF,aAAa,CAACR,IAAD,CAAxB;AACAtH,QAAAA,MAAM,CAACgI,IAAD,EAAOD,YAAY,CAAC5I,IAAI,CAACmI,IAAD,EAAO,YAAP,CAAL,CAAnB,CAAN;AACA,YAAIW,QAAQ,GAAG;AACXhH,UAAAA,IAAI,EAAE,SADK;AAEXsD,UAAAA,UAAU,EAAEyD,IAFD;AAGXxB,UAAAA,QAAQ,EAAE;AACNvF,YAAAA,IAAI,EAAE,YADA;AAENF,YAAAA,WAAW,EAAE0G,IAAI,CAACA;AAFZ;AAHC,SAAf;AAQA,eAAOQ,QAAP;AACH;;AACD,eAAShB,QAAT,CAAkBK,IAAlB,EAAwB;AACpB,YAAIU,IAAI,GAAGF,aAAa,CAACR,IAAD,CAAxB;AACAtH,QAAAA,MAAM,CAACgI,IAAD,EAAOnI,QAAQ,CAACyH,IAAD,EAAO,CAAC,KAAD,CAAP,CAAf,CAAN;AACA,eAAO;AACHrG,UAAAA,IAAI,EAAE,SADH;AAEHsD,UAAAA,UAAU,EAAEyD,IAFT;AAGHxB,UAAAA,QAAQ,EAAE;AACNvF,YAAAA,IAAI,EAAE,OADA;AAENF,YAAAA,WAAW,EAAEP,SAAS,CAAC8G,IAAD,CAAT,CAAgBvG;AAFvB;AAHP,SAAP;AAQH;;AACD,eAASgH,YAAT,CAAsBG,UAAtB,EAAkC;AAC9B,YAAI7C,KAAK,GAAG,EAAZ;;AACA,YAAI6C,UAAJ,EAAgB;AACZ,cAAInD,SAAS,GAAG5F,IAAI,CAAC+I,UAAD,EAAa,MAAb,CAApB;;AACA,cAAInD,SAAJ,EAAe;AACX,gBAAIzB,KAAK,GAAG3D,OAAO,CAACR,IAAI,CAAC4F,SAAD,EAAY,OAAZ,CAAL,CAAnB;AAAA,gBACIxB,OAAO,GAAG,6BAAW5D,OAAO,CAACR,IAAI,CAAC4F,SAAD,EAAY,SAAZ,CAAL,CAAlB,CADd;AAAA,gBAEIe,KAAK,GAAG,6BAAWnG,OAAO,CAACR,IAAI,CAAC4F,SAAD,EAAY,OAAZ,CAAL,CAAlB,CAFZ;AAGA,gBAAIzB,KAAJ,EAAW+B,KAAK,CAACU,MAAN,GAAezC,KAAf;AACX,gBAAI,CAACxC,KAAK,CAACyC,OAAD,CAAV,EAAqB8B,KAAK,CAAC,gBAAD,CAAL,GAA0B9B,OAA1B,CALV,CAMX;;AACA,gBAAI,CAACzC,KAAK,CAACgF,KAAD,CAAV,EAAmBT,KAAK,CAAC,cAAD,CAAL,GAAwBS,KAAK,GAAG,EAAR,GAAa,IAArC;AACtB;AACJ;;AACD,eAAOT,KAAP;AACH;;AACD,eAASyC,aAAT,CAAuBR,IAAvB,EAA6B;AACzB,YAAIU,IAAI,GAAGnI,QAAQ,CAACyH,IAAD,EAAO,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,UAAxC,CAAP,CAAnB;AAAA,YACIa,KAAK,GAAGtJ,GAAG,CAACyI,IAAD,EAAO,MAAP,CADf;AAEA,YAAIa,KAAK,CAAC1J,MAAV,EAAkBuJ,IAAI,CAACG,KAAL,GAAa,EAAb;;AAClB,aAAK,IAAIzJ,CAAC,GAAG,CAAR,EAAW0J,IAAhB,EAAsB1J,CAAC,GAAGyJ,KAAK,CAAC1J,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;AACzC0J,UAAAA,IAAI,GAAG;AAAE5C,YAAAA,IAAI,EAAExG,IAAI,CAACmJ,KAAK,CAACzJ,CAAD,CAAN,EAAW,MAAX;AAAZ,WAAP;AACAsB,UAAAA,MAAM,CAACoI,IAAD,EAAOvI,QAAQ,CAACsI,KAAK,CAACzJ,CAAD,CAAN,EAAW,CAAC,MAAD,EAAS,MAAT,CAAX,CAAf,CAAN;AACAsJ,UAAAA,IAAI,CAACG,KAAL,CAAW5H,IAAX,CAAgB6H,IAAhB;AACH;;AACD,eAAOJ,IAAP;AACH;;AACD,aAAO3F,EAAP;AACH;AA/VG,GAAR;AAiWA,SAAOH,CAAP;AACH,CAxcsB,EAAhB;;;AA0cP,IAAI,OAAOmG,MAAP,KAAkB,WAAtB,EAAmCA,MAAM,CAAC3G,OAAP,GAAiBvD,SAAjB","sourcesContent":["export var toGeoJSON = (function() {\n    'use strict';\n\n    var removeSpace = /\\s*/g,\n        trimSpace = /^\\s*|\\s*$/g,\n        splitSpace = /\\s+/;\n    // generate a short, numeric hash of a string\n    function okhash(x) {\n        if (!x || !x.length) return 0;\n        for (var i = 0, h = 0; i < x.length; i++) {\n            h = ((h << 5) - h) + x.charCodeAt(i) | 0;\n        } return h;\n    }\n    // all Y children of X\n    function get(x, y) { return x.getElementsByTagName(y); }\n    function attr(x, y) { return x.getAttribute(y); }\n    function attrf(x, y) { return parseFloat(attr(x, y)); }\n    // one Y child of X, if any, otherwise null\n    function get1(x, y) { var n = get(x, y); return n.length ? n[0] : null; }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n    function norm(el) { if (el.normalize) { el.normalize(); } return el; }\n    // cast array x into numbers\n    function numarray(x) {\n        for (var j = 0, o = []; j < x.length; j++) { o[j] = parseFloat(x[j]); }\n        return o;\n    }\n    // get the content of a text node, if any\n    function nodeVal(x) {\n        if (x) { norm(x); }\n        return (x && x.textContent) || '';\n    }\n    // get the contents of multiple text nodes, if present\n    function getMulti(x, ys) {\n        var o = {}, n, k;\n        for (k = 0; k < ys.length; k++) {\n            n = get1(x, ys[k]);\n            if (n) o[ys[k]] = nodeVal(n);\n        }\n        return o;\n    }\n    // add properties of Y to X, overwriting if present in both\n    function extend(x, y) { for (var k in y) x[k] = y[k]; }\n    // get one coordinate from a coordinate array, if any\n    function coord1(v) { return numarray(v.replace(removeSpace, '').split(',')); }\n    // get all coordinates from a coordinate array as [[],[]]\n    function coord(v) {\n        var coords = v.replace(trimSpace, '').split(splitSpace),\n            o = [];\n        for (var i = 0; i < coords.length; i++) {\n            o.push(coord1(coords[i]));\n        }\n        return o;\n    }\n    function coordPair(x) {\n        var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n            ele = get1(x, 'ele'),\n            // handle namespaced attribute in browser\n            heartRate = get1(x, 'gpxtpx:hr') || get1(x, 'hr'),\n            time = get1(x, 'time'),\n            e;\n        if (ele) {\n            e = parseFloat(nodeVal(ele));\n            if (!isNaN(e)) {\n                ll.push(e);\n            }\n        }\n        return {\n            coordinates: ll,\n            time: time ? nodeVal(time) : null,\n            heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null\n        };\n    }\n\n    // create a new feature collection parent object\n    function fc() {\n        return {\n            type: 'FeatureCollection',\n            features: []\n        };\n    }\n\n    var serializer;\n    if (typeof XMLSerializer !== 'undefined') {\n        /* istanbul ignore next */\n        serializer = new XMLSerializer();\n    } else {\n        var isNodeEnv = (typeof process === 'object' && !process.browser);\n        var isTitaniumEnv = (typeof Titanium === 'object');\n        if (typeof exports === 'object' && (isNodeEnv || isTitaniumEnv)) {\n            serializer = new (require('xmldom').XMLSerializer)();\n        } else {\n            throw new Error('Unable to initialize serializer');\n        }\n    }\n    function xml2str(str) {\n        // IE9 will create a new XMLSerializer but it'll crash immediately.\n        // This line is ignored because we don't run coverage tests in IE9\n        /* istanbul ignore next */\n        if (str.xml !== undefined) return str.xml;\n        return serializer.serializeToString(str);\n    }\n\n    var t = {\n        kml:function(doc) {\n\n            var gj = fc(),\n                // styleindex keeps track of hashed styles in order to match features\n                styleIndex = {}, styleByHash = {},\n                // stylemapindex keeps track of style maps to expose in properties\n                styleMapIndex = {},\n                // atomic geospatial types supported by KML - MultiGeometry is\n                // handled separately\n                geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n                // all root placemarks in the file\n                placemarks = get(doc, 'Placemark'),\n                styles = get(doc, 'Style'),\n                styleMaps = get(doc, 'StyleMap');\n\n            for (var k = 0; k < styles.length; k++) {\n                var hash = okhash(xml2str(styles[k])).toString(16);\n                styleIndex['#' + attr(styles[k], 'id')] = hash;\n                styleByHash[hash] = styles[k];\n            }\n            for (var l = 0; l < styleMaps.length; l++) {\n                styleIndex['#' + attr(styleMaps[l], 'id')] = okhash(xml2str(styleMaps[l])).toString(16);\n                var pairs = get(styleMaps[l], 'Pair');\n                var pairsMap = {};\n                for (var m = 0; m < pairs.length; m++) {\n                    pairsMap[nodeVal(get1(pairs[m], 'key'))] = nodeVal(get1(pairs[m], 'styleUrl'));\n                }\n                styleMapIndex['#' + attr(styleMaps[l], 'id')] = pairsMap;\n\n            }\n            for (var j = 0; j < placemarks.length; j++) {\n                gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n            }\n            function kmlColor(v) {\n                var color, opacity;\n                v = v || '';\n                if (v.substr(0, 1) === '#') { v = v.substr(1); }\n                if (v.length === 6 || v.length === 3) { color = v; }\n                if (v.length === 8) {\n                    opacity = parseInt(v.substr(0, 2), 16) / 255;\n                    color = '#' + v.substr(6, 2) +\n                        v.substr(4, 2) +\n                        v.substr(2, 2);\n                }\n                return [color, isNaN(opacity) ? undefined : opacity];\n            }\n            function gxCoord(v) { return numarray(v.split(' ')); }\n            function gxCoords(root) {\n                var elems = get(root, 'coord', 'gx'), coords = [], times = [];\n                if (elems.length === 0) elems = get(root, 'gx:coord');\n                for (var i = 0; i < elems.length; i++) coords.push(gxCoord(nodeVal(elems[i])));\n                var timeElems = get(root, 'when');\n                for (var j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n                return {\n                    coords: coords,\n                    times: times\n                };\n            }\n            function getGeometry(root) {\n                var geomNode, geomNodes, i, j, k, geoms = [], coordTimes = [];\n                if (get1(root, 'MultiGeometry')) { return getGeometry(get1(root, 'MultiGeometry')); }\n                if (get1(root, 'MultiTrack')) { return getGeometry(get1(root, 'MultiTrack')); }\n                if (get1(root, 'gx:MultiTrack')) { return getGeometry(get1(root, 'gx:MultiTrack')); }\n                for (i = 0; i < geotypes.length; i++) {\n                    geomNodes = get(root, geotypes[i]);\n                    if (geomNodes) {\n                        for (j = 0; j < geomNodes.length; j++) {\n                            geomNode = geomNodes[j];\n                            if (geotypes[i] === 'Point') {\n                                geoms.push({\n                                    type: 'Point',\n                                    coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'LineString') {\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'Polygon') {\n                                var rings = get(geomNode, 'LinearRing'),\n                                    coords = [];\n                                for (k = 0; k < rings.length; k++) {\n                                    coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                                }\n                                geoms.push({\n                                    type: 'Polygon',\n                                    coordinates: coords\n                                });\n                            } else if (geotypes[i] === 'Track' ||\n                                geotypes[i] === 'gx:Track') {\n                                var track = gxCoords(geomNode);\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: track.coords\n                                });\n                                if (track.times.length) coordTimes.push(track.times);\n                            }\n                        }\n                    }\n                }\n                return {\n                    geoms: geoms,\n                    coordTimes: coordTimes\n                };\n            }\n            function getPlacemark(root) {\n                var geomsAndTimes = getGeometry(root), i, properties = {},\n                    name = nodeVal(get1(root, 'name')),\n                    address = nodeVal(get1(root, 'address')),\n                    styleUrl = nodeVal(get1(root, 'styleUrl')),\n                    description = nodeVal(get1(root, 'description')),\n                    timeSpan = get1(root, 'TimeSpan'),\n                    timeStamp = get1(root, 'TimeStamp'),\n                    extendedData = get1(root, 'ExtendedData'),\n                    lineStyle = get1(root, 'LineStyle'),\n                    polyStyle = get1(root, 'PolyStyle'),\n                    visibility = get1(root, 'visibility');\n\n                if (!geomsAndTimes.geoms.length) return [];\n                if (name) properties.name = name;\n                if (address) properties.address = address;\n                if (styleUrl) {\n                    if (styleUrl[0] !== '#') {\n                        styleUrl = '#' + styleUrl;\n                    }\n\n                    properties.styleUrl = styleUrl;\n                    if (styleIndex[styleUrl]) {\n                        properties.styleHash = styleIndex[styleUrl];\n                    }\n                    if (styleMapIndex[styleUrl]) {\n                        properties.styleMapHash = styleMapIndex[styleUrl];\n                        properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n                    }\n                    // Try to populate the lineStyle or polyStyle since we got the style hash\n                    var style = styleByHash[properties.styleHash];\n                    if (style) {\n                        if (!lineStyle) lineStyle = get1(style, 'LineStyle');\n                        if (!polyStyle) polyStyle = get1(style, 'PolyStyle');\n                        var iconStyle = get1(style, 'IconStyle');\n                        if (iconStyle) {\n                            var icon = get1(iconStyle, 'Icon');\n                            if (icon) {\n                                var href = nodeVal(get1(icon, 'href'));\n                                if (href) properties.icon = href;\n                            }\n                        }\n                    }\n                }\n                if (description) properties.description = description;\n                if (timeSpan) {\n                    var begin = nodeVal(get1(timeSpan, 'begin'));\n                    var end = nodeVal(get1(timeSpan, 'end'));\n                    properties.timespan = { begin: begin, end: end };\n                }\n                if (timeStamp) {\n                    properties.timestamp = nodeVal(get1(timeStamp, 'when'));\n                }\n                if (lineStyle) {\n                    var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n                        color = linestyles[0],\n                        opacity = linestyles[1],\n                        width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                    if (color) properties.stroke = color;\n                    if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n                    if (!isNaN(width)) properties['stroke-width'] = width;\n                }\n                if (polyStyle) {\n                    var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n                        pcolor = polystyles[0],\n                        popacity = polystyles[1],\n                        fill = nodeVal(get1(polyStyle, 'fill')),\n                        outline = nodeVal(get1(polyStyle, 'outline'));\n                    if (pcolor) properties.fill = pcolor;\n                    if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n                    if (fill) properties['fill-opacity'] = fill === '1' ? properties['fill-opacity'] || 1 : 0;\n                    if (outline) properties['stroke-opacity'] = outline === '1' ? properties['stroke-opacity'] || 1 : 0;\n                }\n                if (extendedData) {\n                    var datas = get(extendedData, 'Data'),\n                        simpleDatas = get(extendedData, 'SimpleData');\n\n                    for (i = 0; i < datas.length; i++) {\n                        properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n                    }\n                    for (i = 0; i < simpleDatas.length; i++) {\n                        properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n                    }\n                }\n                if (visibility) {\n                    properties.visibility = nodeVal(visibility);\n                }\n                if (geomsAndTimes.coordTimes.length) {\n                    properties.coordTimes = (geomsAndTimes.coordTimes.length === 1) ?\n                        geomsAndTimes.coordTimes[0] : geomsAndTimes.coordTimes;\n                }\n                var feature = {\n                    type: 'Feature',\n                    geometry: (geomsAndTimes.geoms.length === 1) ? geomsAndTimes.geoms[0] : {\n                        type: 'GeometryCollection',\n                        geometries: geomsAndTimes.geoms\n                    },\n                    properties: properties\n                };\n                if (attr(root, 'id')) feature.id = attr(root, 'id');\n                return [feature];\n            }\n            return gj;\n        },\n        gpx: function(doc) {\n            var i,\n                tracks = get(doc, 'trk'),\n                routes = get(doc, 'rte'),\n                waypoints = get(doc, 'wpt'),\n                // a feature collection\n                gj = fc(),\n                feature;\n            for (i = 0; i < tracks.length; i++) {\n                feature = getTrack(tracks[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < routes.length; i++) {\n                feature = getRoute(routes[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < waypoints.length; i++) {\n                gj.features.push(getPoint(waypoints[i]));\n            }\n            function initializeArray(arr, size) {\n                for (var h = 0; h < size; h++) {\n                    arr.push(null);\n                }\n                return arr;\n            }\n            function getPoints(node, pointname) {\n                var pts = get(node, pointname),\n                    line = [],\n                    times = [],\n                    heartRates = [],\n                    l = pts.length;\n                if (l < 2) return {};  // Invalid line in GeoJSON\n                for (var i = 0; i < l; i++) {\n                    var c = coordPair(pts[i]);\n                    line.push(c.coordinates);\n                    if (c.time) times.push(c.time);\n                    if (c.heartRate || heartRates.length) {\n                        if (!heartRates.length) initializeArray(heartRates, i);\n                        heartRates.push(c.heartRate || null);\n                    }\n                }\n                return {\n                    line: line,\n                    times: times,\n                    heartRates: heartRates\n                };\n            }\n            function getTrack(node) {\n                var segments = get(node, 'trkseg'),\n                    track = [],\n                    times = [],\n                    heartRates = [],\n                    line;\n                for (var i = 0; i < segments.length; i++) {\n                    line = getPoints(segments[i], 'trkpt');\n                    if (line) {\n                        if (line.line) track.push(line.line);\n                        if (line.times && line.times.length) times.push(line.times);\n                        if (heartRates.length || (line.heartRates && line.heartRates.length)) {\n                            if (!heartRates.length) {\n                                for (var s = 0; s < i; s++) {\n                                    heartRates.push(initializeArray([], track[s].length));\n                                }\n                            }\n                            if (line.heartRates && line.heartRates.length) {\n                                heartRates.push(line.heartRates);\n                            } else {\n                                heartRates.push(initializeArray([], line.line.length || 0));\n                            }\n                        }\n                    }\n                }\n                if (track.length === 0) return;\n                var properties = getProperties(node);\n                extend(properties, getLineStyle(get1(node, 'extensions')));\n                if (times.length) properties.coordTimes = track.length === 1 ? times[0] : times;\n                if (heartRates.length) properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n                return {\n                    type: 'Feature',\n                    properties: properties,\n                    geometry: {\n                        type: track.length === 1 ? 'LineString' : 'MultiLineString',\n                        coordinates: track.length === 1 ? track[0] : track\n                    }\n                };\n            }\n            function getRoute(node) {\n                var line = getPoints(node, 'rtept');\n                if (!line.line) return;\n                var prop = getProperties(node);\n                extend(prop, getLineStyle(get1(node, 'extensions')));\n                var routeObj = {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: line.line\n                    }\n                };\n                return routeObj;\n            }\n            function getPoint(node) {\n                var prop = getProperties(node);\n                extend(prop, getMulti(node, ['sym']));\n                return {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'Point',\n                        coordinates: coordPair(node).coordinates\n                    }\n                };\n            }\n            function getLineStyle(extensions) {\n                var style = {};\n                if (extensions) {\n                    var lineStyle = get1(extensions, 'line');\n                    if (lineStyle) {\n                        var color = nodeVal(get1(lineStyle, 'color')),\n                            opacity = parseFloat(nodeVal(get1(lineStyle, 'opacity'))),\n                            width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                        if (color) style.stroke = color;\n                        if (!isNaN(opacity)) style['stroke-opacity'] = opacity;\n                        // GPX width is in mm, convert to px with 96 px per inch\n                        if (!isNaN(width)) style['stroke-width'] = width * 96 / 25.4;\n                    }\n                }\n                return style;\n            }\n            function getProperties(node) {\n                var prop = getMulti(node, ['name', 'cmt', 'desc', 'type', 'time', 'keywords']),\n                    links = get(node, 'link');\n                if (links.length) prop.links = [];\n                for (var i = 0, link; i < links.length; i++) {\n                    link = { href: attr(links[i], 'href') };\n                    extend(link, getMulti(links[i], ['text', 'type']));\n                    prop.links.push(link);\n                }\n                return prop;\n            }\n            return gj;\n        }\n    };\n    return t;\n})();\n\nif (typeof module !== 'undefined') module.exports = toGeoJSON;\n"]},"metadata":{},"sourceType":"script"}