{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/justen/Projects/Apps/kml_convert/components/Uploader.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nvar toGeoJSON = require('../static/togeojson');\n\nfunction upload(e) {\n  var file = e.target.files[0];\n  var url = window.URL.createObjectURL(file);\n  var xhr = new XMLHttpRequest(url);\n  xhr.open(\"GET\", url, true);\n  xhr.send();\n\n  xhr.onload = function () {\n    var kml = xhr.responseXML;\n    convert(kml, file);\n  };\n}\n\nfunction convert(kml, file) {\n  var geojson = toGeoJSON.kml(kml); // const download = window.URL.createObjectURL(geojson)\n\n  console.log();\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(_JSON$stringify(geojson));\n  var dlAnchorElem = document.getElementById('downloadAnchorElem');\n  dlAnchorElem.setAttribute(\"href\", dataStr);\n  dlAnchorElem.setAttribute(\"download\", file.name + \".json\");\n  dlAnchorElem.click();\n}\n\nexport default function Uploader() {\n  return React.createElement(\"div\", {\n    className: \"jsx-1846388426\" + \" \" + \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-1846388426\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \".kml converter\"), React.createElement(\"div\", {\n    className: \"jsx-1846388426\" + \" \" + \"upload_form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    id: \"downloadAnchorElem\",\n    className: \"jsx-1846388426\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file_input\",\n    name: \"file_input\",\n    onChange: upload,\n    accept: \".kml\",\n    className: \"jsx-1846388426\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"file_input\",\n    className: \"jsx-1846388426\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Select File\")), React.createElement(_JSXStyle, {\n    id: \"1846388426\",\n    __self: this\n  }, \".wrapper.jsx-1846388426{width:350px;height:200px;background-color:#fff;border-radius:4px;box-shadow:2px 6px 10px rgba(0,0,0,0.1);display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}h1.jsx-1846388426{font-weight:400;font-size:24px;margin-top:10px;}input.jsx-1846388426{width:0.1px;height:0.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1;}label.jsx-1846388426{font-weight:700;width:150px;height:35px;margin-bottom:10px;border-radius:4px;text-align:center;line-height:150%;font-size:1.15em;color:white;background-color:#47a66a;display:grid;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;}a.jsx-1846388426{display:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdXN0ZW4vUHJvamVjdHMvQXBwcy9rbWxfY29udmVydC9jb21wb25lbnRzL1VwbG9hZGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Da0IsQUFHdUIsQUFXSSxBQUtKLEFBUUksQUFlSCxZQXRDQSxBQWdCQSxDQXVCZixHQTVCaUIsQUFhSCxTQXZCVSxBQWdCWixHQVFFLEdBYkksSUFNQSxLQVFHLE9BeEJELEFBV3BCLElBTW9CLFFBUUEsTUF4QnNCLElBaUI3QixRQVFPLEdBUHBCLGVBUW1CLFVBekJKLE9BMEJJLGlCQUNMLFlBQ1kseUJBQ1gsYUE1QlMsQUE2QkgsOEVBNUJXLGVBNkJmLGVBQ2pCLHFGQTdCcUIsNkZBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9qdXN0ZW4vUHJvamVjdHMvQXBwcy9rbWxfY29udmVydC9jb21wb25lbnRzL1VwbG9hZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdG9HZW9KU09OID0gcmVxdWlyZSgnLi4vc3RhdGljL3RvZ2VvanNvbicpXG5cbmZ1bmN0aW9uIHVwbG9hZChlKSB7XG4gIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXVxuICBsZXQgdXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSlcbiAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KHVybClcbiAgeGhyLm9wZW4oXCJHRVRcIiwgdXJsLCB0cnVlKVxuICB4aHIuc2VuZCgpXG4gIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBrbWwgPSB4aHIucmVzcG9uc2VYTUxcbiAgICBjb252ZXJ0KGttbCwgZmlsZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBjb252ZXJ0KGttbCwgZmlsZSl7XG4gIGNvbnN0IGdlb2pzb24gPSB0b0dlb0pTT04ua21sKGttbClcbiAgLy8gY29uc3QgZG93bmxvYWQgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChnZW9qc29uKVxuICBjb25zb2xlLmxvZygpXG5cbiAgdmFyIGRhdGFTdHIgPSBcImRhdGE6dGV4dC9qc29uO2NoYXJzZXQ9dXRmLTgsXCIgKyBlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoZ2VvanNvbikpO1xuICB2YXIgZGxBbmNob3JFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rvd25sb2FkQW5jaG9yRWxlbScpO1xuICBkbEFuY2hvckVsZW0uc2V0QXR0cmlidXRlKFwiaHJlZlwiLCAgICAgZGF0YVN0ciAgICAgKTtcbiAgZGxBbmNob3JFbGVtLnNldEF0dHJpYnV0ZShcImRvd25sb2FkXCIsIGZpbGUubmFtZSArIFwiLmpzb25cIik7XG4gIGRsQW5jaG9yRWxlbS5jbGljaygpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBVcGxvYWRlcigpIHtcbiAgcmV0dXJuKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwid3JhcHBlclwiPlxuICAgICAgPGgxPi5rbWwgY29udmVydGVyPC9oMT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXBsb2FkX2Zvcm1cIj5cbiAgICAgICAgPGEgaWQ9XCJkb3dubG9hZEFuY2hvckVsZW1cIiA+PC9hPlxuICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiBpZD1cImZpbGVfaW5wdXRcIiBuYW1lPVwiZmlsZV9pbnB1dFwiIG9uQ2hhbmdlPXt1cGxvYWR9IGFjY2VwdD1cIi5rbWxcIj48L2lucHV0PlxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImZpbGVfaW5wdXRcIj5TZWxlY3QgRmlsZTwvbGFiZWw+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLndyYXBwZXIge1xuICAgICAgICAgIHdpZHRoOiAzNTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDJweCA2cHggMTBweCByZ2JhKDAsMCwwLDAuMSk7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICB3aWR0aDogMC4xcHg7XG4gICAgICAgICAgaGVpZ2h0OiAwLjFweDtcbiAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICB9XG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDM1cHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS4xNWVtO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiM0N2E2NmE7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBhIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gIClcbn0iXX0= */\\n/*@ sourceURL=/Users/justen/Projects/Apps/kml_convert/components/Uploader.js */\"));\n}","map":{"version":3,"sources":["/Users/justen/Projects/Apps/kml_convert/components/Uploader.js"],"names":["toGeoJSON","require","upload","e","file","target","files","url","window","URL","createObjectURL","xhr","XMLHttpRequest","open","send","onload","kml","responseXML","convert","geojson","console","log","dataStr","encodeURIComponent","dlAnchorElem","document","getElementById","setAttribute","name","click","Uploader"],"mappings":";;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,MAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,IAA3B,CAAV;AACA,MAAMO,GAAG,GAAG,IAAIC,cAAJ,CAAmBL,GAAnB,CAAZ;AACAI,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB,EAAqB,IAArB;AACAI,EAAAA,GAAG,CAACG,IAAJ;;AACAH,EAAAA,GAAG,CAACI,MAAJ,GAAa,YAAW;AACtB,QAAMC,GAAG,GAAGL,GAAG,CAACM,WAAhB;AACAC,IAAAA,OAAO,CAACF,GAAD,EAAMZ,IAAN,CAAP;AACD,GAHD;AAID;;AAED,SAASc,OAAT,CAAiBF,GAAjB,EAAsBZ,IAAtB,EAA2B;AACzB,MAAMe,OAAO,GAAGnB,SAAS,CAACgB,GAAV,CAAcA,GAAd,CAAhB,CADyB,CAEzB;;AACAI,EAAAA,OAAO,CAACC,GAAR;AAEA,MAAIC,OAAO,GAAG,kCAAkCC,kBAAkB,CAAC,gBAAeJ,OAAf,CAAD,CAAlE;AACA,MAAIK,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAnB;AACAF,EAAAA,YAAY,CAACG,YAAb,CAA0B,MAA1B,EAAsCL,OAAtC;AACAE,EAAAA,YAAY,CAACG,YAAb,CAA0B,UAA1B,EAAsCvB,IAAI,CAACwB,IAAL,GAAY,OAAlD;AACAJ,EAAAA,YAAY,CAACK,KAAb;AACD;;AAED,eAAe,SAASC,QAAT,GAAoB;AACjC,SACE;AAAA,wCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA,wCAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,oBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,YAAtB;AAAmC,IAAA,IAAI,EAAC,YAAxC;AAAqD,IAAA,QAAQ,EAAE5B,MAA/D;AAAuE,IAAA,MAAM,EAAC,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAFF;AAAA;AAAA;AAAA,6uJADF;AAsDD","sourcesContent":["const toGeoJSON = require('../static/togeojson')\n\nfunction upload(e) {\n  const file = e.target.files[0]\n  let url = window.URL.createObjectURL(file)\n  const xhr = new XMLHttpRequest(url)\n  xhr.open(\"GET\", url, true)\n  xhr.send()\n  xhr.onload = function() {\n    const kml = xhr.responseXML\n    convert(kml, file)\n  }\n}\n\nfunction convert(kml, file){\n  const geojson = toGeoJSON.kml(kml)\n  // const download = window.URL.createObjectURL(geojson)\n  console.log()\n\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(geojson));\n  var dlAnchorElem = document.getElementById('downloadAnchorElem');\n  dlAnchorElem.setAttribute(\"href\",     dataStr     );\n  dlAnchorElem.setAttribute(\"download\", file.name + \".json\");\n  dlAnchorElem.click();\n}\n\nexport default function Uploader() {\n  return(\n    <div className=\"wrapper\">\n      <h1>.kml converter</h1>\n      <div className=\"upload_form\">\n        <a id=\"downloadAnchorElem\" ></a>\n        <input type=\"file\" id=\"file_input\" name=\"file_input\" onChange={upload} accept=\".kml\"></input>\n        <label htmlFor=\"file_input\">Select File</label>\n      </div>\n      <style jsx>{`\n        .wrapper {\n          width: 350px;\n          height: 200px;\n          background-color: #fff;\n          border-radius: 4px;\n          box-shadow: 2px 6px 10px rgba(0,0,0,0.1);\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          align-items: center;\n        }\n        h1 {\n          font-weight: 400;\n          font-size: 24px;\n          margin-top: 10px;\n        }\n        input {\n          width: 0.1px;\n          height: 0.1px;\n          opacity: 0;\n          overflow: hidden;\n          position: absolute;\n          z-index: -1;\n        }\n        label {\n          font-weight: 700;\n          width: 150px;\n          height: 35px;\n          margin-bottom: 10px;\n          border-radius: 4px;\n          text-align: center;\n          line-height: 150%;\n          font-size: 1.15em;\n          color: white;\n          background-color:#47a66a;\n          display: grid;\n          align-items: center;\n          cursor: pointer;\n        }\n        a {\n          display: none;\n        }\n      `}</style>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}